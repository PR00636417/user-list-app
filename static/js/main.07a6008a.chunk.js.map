{"version":3,"sources":["assets/left-arrow.svg","assets/right-arrow.svg","redux/actions/actionTypes.js","redux/actions/userActions.js","components/CustomSpinner.js","components/Login.js","components/SignUp.js","components/CustomModal.js","components/Header.js","components/AuthenticateLogin.js","components/UserList.js","components/UserDetails.js","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/userDataReducer.js","redux/sagas.js","redux/configureStore.js","index.js"],"names":["module","exports","getUserState","state","userData","onInputFieldChange","inputFieldName","inputValue","type","CustomSpinner","props","loadSpinner","Button","variant","disabled","style","marginTop","Spinner","as","animation","size","role","aria-hidden","Login","dispatch","useDispatch","useState","loginEmailError","setLoginEmailError","loginPasswordError","setLoginPasswordError","useSelector","loginEmail","loginPassword","loginErrorMessage","loginToken","useEffect","loginInputFieldChange","className","Form","noValidate","Group","controlId","Control","placeholder","value","onChange","event","target","isInvalid","Feedback","onClick","to","SignUp","signUpEmailError","setSignUpEmailError","signUpPasswordError","setSignUpPasswordError","signUpEmail","signUpPassword","signUpApiMessage","signUpInputFieldChange","slice","onSignUpUser","CustomModal","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Title","modalHeader","Body","modalMessage","Footer","onSelectedYes","showLogoutModal","setShowLogoutModal","isLogout","setLogout","float","paddingRight","fontWeight","cursor","AuthenticateLogin","WrappedComponent","Fragment","pageNumber","setPageNumber","pageId","userListData","userListApiFailedMessage","tableResponsiveSize","window","innerWidth","Table","striped","bordered","hover","map","list","index","key","id","email","first_name","last_name","src","LeftArrow","width","marginRight","alt","RightArrow","userID","location","hash","userProfileDetails","profileDetailsFailedMessage","showDeleteModal","setShowDeleteModal","userId","avatar","App","exact","path","component","UserList","UserDetails","Boolean","hostname","match","signUpToken","rootReducer","combineReducers","initialState","action","signUpErrorMessage","validateUser","userRegistration","getUsers","takeEveryGetUsers","getProfileDetails","takeEveryGetProfileDetails","deleteUser","history","createBrowserHistory","require","take","select","types","stateData","loginDetails","password","response","put","axios","post","status","data","registerDetails","goBack","JSON","parse","request","error","get","takeEvery","delete","sagaMiddleware","createSagaMiddleware","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","saga","sagas","run","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.07a6008a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left-arrow.46b3d88f.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.1dc1d55f.svg\";","//Login\r\nexport const VALIDATE_USER_LOGIN = \"VALIDATE_USER_LOGIN\";\r\nexport const LOGIN_API_SUCCESS = \"LOGIN_API_SUCCESS\";\r\nexport const LOGIN_API_FAILED = \"LOGIN_API_FAILED\";\r\n\r\n//InputField\r\nexport const ON_INPUT_FIELD_CHANGE = \"ON_INPUT_FIELD_CHANGE\";\r\nexport const getUserState = state => state.userData;\r\n\r\n//SignUP\r\nexport const ON_SIGNUP_USER = \"ON_SIGNUP_USER\";\r\nexport const SIGN_UP_API_FAILED = \"SIGN_UP_API_FAILED\";\r\nexport const SIGN_UP_API_SUCCESS = \"SIGN_UP_API_SUCCESS\";\r\n\r\n//UserList\r\nexport const GET_USER_LISTS = \"GET_USER_LISTS\";\r\nexport const USERLIST_API_SUCCESS = \"USERLIST_API_SUCCESS\";\r\nexport const USERLIST_API_FAILED = \"USERLIST_API_FAILED\";\r\n\r\n//UserProfileDetails\r\nexport const GET_USER_PROFILE_DETAILS = \"GET_USER_PROFILE_DETAILS\";\r\nexport const PROFILE_DETAILS_API_SUCCESS = \"PROFILE_DETAILS_API_SUCCESS\";\r\nexport const PROFILE_DETAILS_API_FAILED = \"PROFILE_DETAILS_API_FAILED\";\r\nexport const ON_DELETE_USER = \"ON_DELETE_USER\";\r\n\r\n//Logout\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\n//Spinner\r\n\r\nexport const START_API_LOADER = \"START_API_LOADER\";\r\nexport const STOP_API_LOADER = \"STOP_API_LOADER\";\r\n","import * as types from \"./actionTypes\";\r\n\r\nexport function validateUserLogin() {\r\n  return {\r\n    type: types.VALIDATE_USER_LOGIN\r\n  };\r\n}\r\n\r\nexport function onSignUpUser(signUpEmail, signUpPassword) {\r\n  return {\r\n    type: types.ON_SIGNUP_USER,\r\n    signUpEmail,\r\n    signUpPassword\r\n  };\r\n}\r\n\r\nexport function onInputFieldChange(inputFieldName, inputValue) {\r\n  return {\r\n    type: types.ON_INPUT_FIELD_CHANGE,\r\n    inputFieldName,\r\n    inputValue\r\n  };\r\n}\r\n\r\nexport function getUserLists(pageId) {\r\n  return {\r\n    type: types.GET_USER_LISTS,\r\n    pageId\r\n  };\r\n}\r\n\r\nexport function getUserProfileDetails(userId) {\r\n  return {\r\n    type: types.GET_USER_PROFILE_DETAILS,\r\n    userId\r\n  };\r\n}\r\n\r\nexport function onDeleteUser(userId) {\r\n  return {\r\n    type: types.ON_DELETE_USER,\r\n    userId\r\n  };\r\n}\r\n\r\nexport function userLogout() {\r\n  return {\r\n    type: types.USER_LOGOUT\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\nconst CustomSpinner = props => {\r\n  return (\r\n    props.loadSpinner === true && (\r\n      <Button variant=\"primary\" disabled style={{ marginTop: \"10px\" }}>\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        />\r\n        Loading...\r\n      </Button>\r\n    )\r\n  );\r\n};\r\n\r\nexport default CustomSpinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  validateUserLogin,\r\n  onInputFieldChange,\r\n  userLogout\r\n} from \"../redux/actions/userActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const [loginEmailError, setLoginEmailError] = useState(false);\r\n  const [loginPasswordError, setLoginPasswordError] = useState(false);\r\n  const {\r\n    loginEmail,\r\n    loginPassword,\r\n    loginErrorMessage,\r\n    loginToken,\r\n    loadSpinner\r\n  } = useSelector(state => state.userData);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(userLogout());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onLoginClick = () => {\r\n    if (loginEmail && loginPassword) {\r\n      dispatch(validateUserLogin());\r\n    } else if (loginEmail === \"\") {\r\n      setLoginEmailError(true);\r\n    } else if (loginPassword === \"\") {\r\n      setLoginPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const loginInputFieldChange = (inputFieldName, inputValue) => {\r\n    dispatch(onInputFieldChange(inputFieldName, inputValue));\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"login-container\">\r\n        <div className=\"user-profile-wrapper\">\r\n          <h1> React JS</h1>\r\n          {loginErrorMessage && (\r\n            <div className=\"api-error-message\"> {loginErrorMessage}</div>\r\n          )}\r\n          <div className=\"login-forms\">\r\n            <Form noValidate>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  className=\"formInput\"\r\n                  type=\"email\"\r\n                  placeholder=\"USER NAME\"\r\n                  value={loginEmail}\r\n                  onChange={event =>\r\n                    loginInputFieldChange(\"loginEmail\", event.target.value)}\r\n                  isInvalid={loginEmailError && loginEmail === \"\"}\r\n                />\r\n                <Form.Control.Feedback\r\n                  className=\"form-validation-invalid\"\r\n                  type=\"invalid\"\r\n                >\r\n                  Please enter username\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form noValidate>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Control\r\n                  className=\"formInput\"\r\n                  type=\"password\"\r\n                  placeholder=\"PASSWORD\"\r\n                  value={loginPassword}\r\n                  onChange={event =>\r\n                    loginInputFieldChange(\"loginPassword\", event.target.value)}\r\n                  isInvalid={loginPasswordError && loginPassword === \"\"}\r\n                />\r\n                <Form.Control.Feedback\r\n                  className=\"form-validation-invalid\"\r\n                  type=\"invalid\"\r\n                >\r\n                  Please enter password\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n          <div\r\n            type=\"submit\"\r\n            onClick={() => onLoginClick()}\r\n            className=\"login-button\"\r\n          >\r\n            LOGIN\r\n          </div>\r\n          <div className=\"sign-up-link\">\r\n            <Link to=\"/signup\" className=\"text\">\r\n              Don't have account?\r\n            </Link>\r\n          </div>\r\n          {loginToken && <Redirect to=\"/userlist\" />}\r\n          <CustomSpinner loadSpinner={loadSpinner} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  onSignUpUser,\r\n  onInputFieldChange,\r\n  userLogout\r\n} from \"../redux/actions/userActions\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\n\r\nconst SignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const [signUpEmailError, setSignUpEmailError] = useState(false);\r\n  const [signUpPasswordError, setSignUpPasswordError] = useState(false);\r\n  const {\r\n    signUpEmail,\r\n    signUpPassword,\r\n    signUpApiMessage,\r\n    loadSpinner\r\n  } = useSelector(state => state.userData);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(userLogout());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onSignUpClick = () => {\r\n    if (signUpEmail && signUpPassword) {\r\n      setSignUpEmailError(false);\r\n      setSignUpPasswordError(false);\r\n      dispatch(onSignUpUser(signUpEmail, signUpPassword));\r\n    } else if (signUpEmail === \"\") {\r\n      setSignUpEmailError(true);\r\n    } else if (signUpPassword === \"\") {\r\n      setSignUpPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const signUpInputFieldChange = (inputFieldName, inputValue) => {\r\n    dispatch(onInputFieldChange(inputFieldName, inputValue));\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"login-container\">\r\n        <div className=\"user-profile-wrapper\">\r\n          <h1> React JS</h1>\r\n          {signUpApiMessage && (\r\n            <div className=\"api-error-message\">{signUpApiMessage.slice(6)}</div>\r\n          )}\r\n\r\n          <div className=\"login-forms\">\r\n            <Form noValidate>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  className=\"formInput\"\r\n                  type=\"email\"\r\n                  placeholder=\"USER NAME\"\r\n                  value={signUpEmail}\r\n                  onChange={event =>\r\n                    signUpInputFieldChange(\"signUpEmail\", event.target.value)}\r\n                  isInvalid={signUpEmailError && signUpEmail === \"\"}\r\n                />\r\n                <Form.Control.Feedback\r\n                  className=\"form-validation-invalid\"\r\n                  type=\"invalid\"\r\n                >\r\n                  Please enter username\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n            <Form>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Control\r\n                  className=\"formInput\"\r\n                  type=\"password\"\r\n                  placeholder=\"PASSWORD\"\r\n                  value={signUpPassword}\r\n                  onChange={event =>\r\n                    signUpInputFieldChange(\r\n                      \"signUpPassword\",\r\n                      event.target.value\r\n                    )}\r\n                  isInvalid={signUpPasswordError && signUpPassword === \"\"}\r\n                />\r\n                <Form.Control.Feedback\r\n                  className=\"form-validation-invalid\"\r\n                  type=\"invalid\"\r\n                >\r\n                  Please enter password\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n          <div\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={() => onSignUpClick()}\r\n            className=\"login-button\"\r\n          >\r\n            SIGN UP\r\n          </div>\r\n          <CustomSpinner loadSpinner={loadSpinner} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst CustomModal = props => {\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.modalHeader}</Modal.Title>{\" \"}\r\n      </Modal.Header>{\" \"}\r\n      <Modal.Body>{props.modalMessage}</Modal.Body>{\" \"}\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={() => props.onSelectedYes()}>\r\n          Yes\r\n        </Button>{\" \"}\r\n        <Button variant=\"primary\" onClick={() => props.onHide()}>\r\n          No\r\n        </Button>{\" \"}\r\n      </Modal.Footer>{\" \"}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomModal from \"./CustomModal\";\r\nimport { userLogout } from \"../redux/actions/userActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const dispatch = useDispatch();\r\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n  const [isLogout, setLogout] = useState(false);\r\n  const onLogout = () => {\r\n    dispatch(userLogout());\r\n    setLogout(true);\r\n  };\r\n\r\n  const { loginEmail } = useSelector(state => state.userData);\r\n  return (\r\n    <div className=\"user-header\">\r\n      <div style={{ float: \"right\", paddingRight: \"20px\", fontWeight: \"Bold\" }}>\r\n        <div>Welcome {loginEmail}</div>\r\n        <div\r\n          onClick={() => setShowLogoutModal(true)}\r\n          className=\"header-logout\"\r\n          style={{ float: \"right\", cursor: \"pointer\", fontWeight: \"Bold\" }}\r\n        >\r\n          Logout\r\n        </div>\r\n      </div>\r\n      {showLogoutModal && (\r\n        <CustomModal\r\n          show={showLogoutModal}\r\n          onSelectedYes={() => onLogout()}\r\n          onHide={() => setShowLogoutModal(false)}\r\n          modalMessage=\"Are you Sure, you want to Logout!\"\r\n          modalHeader=\"Logout Confirmation\"\r\n        />\r\n      )}\r\n      {isLogout && <Redirect to=\"/\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst AuthenticateLogin = WrappedComponent => {\r\n  const HOC = props => {\r\n    const { loginToken } = useSelector(state => state.userData);\r\n    return (\r\n      <React.Fragment>\r\n        {loginToken === \"\" ? <Redirect to=\"/\" /> : <WrappedComponent />}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  return HOC;\r\n};\r\n\r\nexport default AuthenticateLogin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { Table } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserLists } from \"../redux/actions/userActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport LeftArrow from \"../assets/left-arrow.svg\";\r\nimport RightArrow from \"../assets/right-arrow.svg\";\r\nimport AuthenticateLogin from \"./AuthenticateLogin\";\r\n\r\nconst UserList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getUserLists(pageNumber));\r\n    },\r\n    [dispatch, pageNumber]\r\n  );\r\n\r\n  const { userListData, userListApiFailedMessage } = useSelector(\r\n    state => state.userData\r\n  );\r\n\r\n  const onLeftArrowClick = () => {\r\n    if (pageNumber === 2) {\r\n      setPageNumber(pageNumber - 1);\r\n    }\r\n  };\r\n  const onRightArrowClick = () => {\r\n    if (pageNumber === 1) {\r\n      setPageNumber(pageNumber + 1);\r\n    }\r\n  };\r\n\r\n  let tableResponsiveSize = \"md\";\r\n  if (window.innerWidth < 1000) {\r\n    tableResponsiveSize = \"sm\";\r\n  }\r\n  return (\r\n    <div className=\"user-container\">\r\n      <Header />\r\n      <div>\r\n        <Table\r\n          striped\r\n          bordered\r\n          hover\r\n          style={{ marginTop: \"20px\" }}\r\n          size={tableResponsiveSize}\r\n        >\r\n          <thead>\r\n            <tr className=\"table-main-heading\">\r\n              <th>Email</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {userListData.map((list, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td className=\"table-email\">\r\n                    <Link to={`/userdetails/${list.id}`}>{list.email}</Link>\r\n                  </td>\r\n                  <td>{list.first_name}</td>\r\n                  <td>{list.last_name}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <div className=\"list-arrows\" style={{ float: \"right\" }}>\r\n        <span>\r\n          <img\r\n            src={LeftArrow}\r\n            style={{ width: \"40px\", marginRight: \"20px\", cursor: \"pointer\" }}\r\n            alt=\"LeftArrow\"\r\n            onClick={() => onLeftArrowClick()}\r\n          />\r\n        </span>\r\n        <span>\r\n          <img\r\n            src={RightArrow}\r\n            style={{ width: \"40px\", cursor: \"pointer\" }}\r\n            alt=\"RightArrow\"\r\n            onClick={() => onRightArrowClick()}\r\n          />\r\n        </span>\r\n      </div>\r\n\r\n      {userListApiFailedMessage && (\r\n        <div className=\"api-error-message\">{userListApiFailedMessage}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthenticateLogin(UserList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUserProfileDetails,\r\n  onDeleteUser\r\n} from \"../redux/actions/userActions\";\r\nimport Header from \"./Header\";\r\nimport CustomModal from \"./CustomModal\";\r\nimport AuthenticateLogin from \"./AuthenticateLogin\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\n\r\nconst UserDetails = props => {\r\n  let userID = window.location.hash.slice(14);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    userProfileDetails,\r\n    profileDetailsFailedMessage,\r\n    loadSpinner\r\n  } = useSelector(state => state.userData);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  // console.log(\"userProfileDetails\", props.match.params.userid);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getUserProfileDetails(userID));\r\n    },\r\n    [dispatch, userID]\r\n  );\r\n\r\n  const onDeleteYes = () => {\r\n    setShowDeleteModal(false);\r\n    dispatch(onDeleteUser(userID));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <div className=\"user-profile-container\">\r\n        <div className=\"user-profile-wrapper\">\r\n          {profileDetailsFailedMessage && (\r\n            <div className=\"api-error-message\">\r\n              {profileDetailsFailedMessage}\r\n            </div>\r\n          )}\r\n\r\n          <img\r\n            className=\"user-profile-picture\"\r\n            src={userProfileDetails.avatar}\r\n            alt=\"userProfilePicture\"\r\n          />\r\n          <div className=\"user-details-text\">\r\n            <div>{userProfileDetails.email}</div>\r\n            <div>\r\n              {userProfileDetails.first_name} {userProfileDetails.last_name}\r\n            </div>\r\n          </div>\r\n          <div className=\"user-delete-link\">\r\n            <div\r\n              type=\"submit\"\r\n              onClick={() => setShowDeleteModal(true)}\r\n              className=\"login-button\"\r\n            >\r\n              Delete\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showDeleteModal && (\r\n        <CustomModal\r\n          show={showDeleteModal}\r\n          onSelectedYes={onDeleteYes}\r\n          onHide={() => setShowDeleteModal(false)}\r\n          modalMessage=\"Are you Sure, you want to Delete user!\"\r\n          modalHeader=\"Delete Confirmation\"\r\n        />\r\n      )}\r\n      <CustomSpinner loadSpinner={loadSpinner} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AuthenticateLogin(UserDetails);\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport UserList from \"./components/UserList\";\nimport UserDetails from \"./components/UserDetails\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/userlist\" component={UserList} />\n        <Route exact path=\"/userdetails/:userid\" component={UserDetails} />\n        <Route exact path=\"/userdetails/:userid\" component={UserDetails} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\r\n  loginEmail: \"\",\r\n  loginPassword: \"\",\r\n  loginErrorMessage: \"\",\r\n  loginToken: \"\",\r\n\r\n  signUpEmail: \"\",\r\n  signUpPassword: \"\",\r\n  signUpToken: \"\",\r\n  signUpApiMessage: \"\",\r\n\r\n  userListData: [],\r\n  userListApiFailedMessage: \"\",\r\n\r\n  userProfileDetails: {},\r\n  profileDetailsFailedMessage: \"\",\r\n\r\n  loadSpinner: false\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport userData from \"./userDataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  userData\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function userDataReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.LOGIN_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loginToken: action.loginToken\r\n      };\r\n    case types.LOGIN_API_FAILED:\r\n      return {\r\n        ...state,\r\n        loginErrorMessage: action.loginErrorMessage\r\n      };\r\n    case types.ON_INPUT_FIELD_CHANGE:\r\n      return {\r\n        ...state,\r\n        [action.inputFieldName]: action.inputValue,\r\n        loginErrorMessage: \"\",\r\n        signUpApiMessage: \"\"\r\n      };\r\n    case types.SIGN_UP_API_FAILED:\r\n      return {\r\n        ...state,\r\n        signUpApiMessage: action.signUpErrorMessage,\r\n        signUpEmail: \"\",\r\n        signUpPassword: \"\"\r\n      };\r\n\r\n    case types.SIGN_UP_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signUpToken: action.signUpToken,\r\n        signUpEmail: \"\",\r\n        signUpPassword: \"\"\r\n      };\r\n\r\n    case types.USERLIST_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userListData: action.userListData,\r\n        userListApiFailedMessage: \"\"\r\n      };\r\n    case types.USERLIST_API_FAILED:\r\n      return {\r\n        ...state,\r\n        userListApiFailedMessage: action.userListApiFailedMessage\r\n      };\r\n\r\n    case types.PROFILE_DETAILS_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userProfileDetails: action.userProfileDetails,\r\n        profileDetailsFailedMessage: \"\"\r\n      };\r\n    case types.PROFILE_DETAILS_API_FAILED:\r\n      return {\r\n        ...state,\r\n        profileDetailsFailedMessage: action.profileDetailsFailedMessage\r\n      };\r\n\r\n    case types.USER_LOGOUT:\r\n      return {\r\n        ...state,\r\n        loginEmail: \"\",\r\n        loginPassword: \"\",\r\n        loginErrorMessage: \"\",\r\n        loginToken: \"\",\r\n        userListData: [],\r\n        userProfileDetails: {},\r\n        signUpEmail: \"\",\r\n        signUpPassword: \"\",\r\n        signUpToken: \"\",\r\n        signUpApiMessage: \"\"\r\n      };\r\n\r\n    case types.START_API_LOADER:\r\n      return {\r\n        ...state,\r\n        loadSpinner: action.loadSpinner\r\n      };\r\n    case types.STOP_API_LOADER:\r\n      return {\r\n        ...state,\r\n        loadSpinner: action.loadSpinner\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"./actions/actionTypes\";\r\nimport { take, select, put, takeEvery } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nvar createBrowserHistory = require(\"history\").createBrowserHistory;\r\nconst history = createBrowserHistory();\r\n\r\n/** Login */\r\n\r\nexport function* validateUser() {\r\n  while (true) {\r\n    yield take(types.VALIDATE_USER_LOGIN);\r\n    let stateData = yield select(types.getUserState);\r\n\r\n    const loginDetails = {\r\n      email: stateData.loginEmail,\r\n      password: stateData.loginPassword\r\n    };\r\n    let response;\r\n\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n\r\n      response = yield axios.post(`https://reqres.in/api/login`, loginDetails);\r\n      if (response && response.status === 200) {\r\n        yield put({\r\n          type: types.LOGIN_API_SUCCESS,\r\n          loginToken: response.data\r\n        });\r\n      }\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.LOGIN_API_FAILED,\r\n        loginErrorMessage: \"User not found, Please create an account\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/** SignUp */\r\n\r\nexport function* userRegistration() {\r\n  while (true) {\r\n    yield take(types.ON_SIGNUP_USER);\r\n    let stateData = yield select(types.getUserState);\r\n\r\n    const registerDetails = {\r\n      email: stateData.signUpEmail,\r\n      password: stateData.signUpPassword\r\n    };\r\n\r\n    let response;\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n      response = yield axios.post(\r\n        `https://reqres.in/api/register`,\r\n        registerDetails\r\n      );\r\n\r\n      if (response && response.status === 200) {\r\n        yield put({\r\n          type: types.SIGN_UP_API_SUCCESS,\r\n          signUpToken: response.data\r\n        });\r\n        yield put({\r\n          type: types.STOP_API_LOADER,\r\n          loadSpinner: false\r\n        });\r\n        history.goBack();\r\n      }\r\n    } catch (err) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.SIGN_UP_API_FAILED,\r\n        signUpErrorMessage: err && JSON.parse(err.request.response).error\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/** User-list */\r\n\r\nexport function* getUsers(action) {\r\n  if (action) {\r\n    let response;\r\n    try {\r\n      response = yield axios.get(\r\n        `https://reqres.in/api/users?page= ${action.pageId}`\r\n      );\r\n\r\n      yield put({\r\n        type: types.USERLIST_API_SUCCESS,\r\n        userListData: response.data.data\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: types.USERLIST_API_FAILED,\r\n        userListApiFailedMessage: \"We are unable to fetch data\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function* takeEveryGetUsers() {\r\n  yield takeEvery(types.GET_USER_LISTS, getUsers);\r\n}\r\n\r\n/** User-profile */\r\nexport function* getProfileDetails(action) {\r\n  if (action) {\r\n    let response;\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n\r\n      response = yield axios.get(\r\n        `https://reqres.in/api/users/ ${action.userId}`\r\n      );\r\n      if (response && response.status === 200) {\r\n        yield put({\r\n          type: types.PROFILE_DETAILS_API_SUCCESS,\r\n          userProfileDetails: response.data.data\r\n        });\r\n        yield put({\r\n          type: types.STOP_API_LOADER,\r\n          loadSpinner: false\r\n        });\r\n      }\r\n    } catch (err) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.PROFILE_DETAILS_API_FAILED,\r\n        profileDetailsFailedMessage: \"We are unable to fetch data\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function* takeEveryGetProfileDetails() {\r\n  yield takeEvery(types.GET_USER_PROFILE_DETAILS, getProfileDetails);\r\n}\r\n\r\nexport function* deleteUser() {\r\n  while (true) {\r\n    const { userId } = yield take(types.ON_DELETE_USER);\r\n    let response;\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n\r\n      response = yield axios.delete(`https://reqres.in/api/users/ ${userId}`);\r\n\r\n      if (response.status === 204) {\r\n        yield put({\r\n          type: types.STOP_API_LOADER,\r\n          loadSpinner: false\r\n        });\r\n        history.goBack();\r\n      }\r\n    } catch (e) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.PROFILE_DETAILS_API_FAILED,\r\n        profileDetailsFailedMessage: \"We are unable delete user\"\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n// eslint-disable-next-line\r\nimport * as sagas from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n  let store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(\r\n      applyMiddleware(sagaMiddleware, reduxImmutableStateInvariant())\r\n    )\r\n  );\r\n\r\n  for (let saga in sagas) {\r\n    // eslint-disable-next-line\r\n    sagaMiddleware.run(sagas[saga]);\r\n  }\r\n  return store;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </React.StrictMode>\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}