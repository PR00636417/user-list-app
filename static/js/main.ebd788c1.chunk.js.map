{"version":3,"sources":["redux/actions/userActions.js","redux/actions/actionTypes.js","components/CustomSpinner.js","components/Login.js","components/SignUp.js","components/CustomModal.js","components/Header.js","components/AuthenticateLoginHOC.js","components/UserList.js","components/UserDetails.js","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/userDataReducer.js","redux/actions/helper.js","redux/service.js","redux/sagas.js","redux/configureStore.js","index.js"],"names":["onInputFieldChange","inputFieldName","inputValue","type","CustomSpinner","props","loadSpinner","Button","variant","disabled","className","Spinner","as","animation","size","role","aria-hidden","Login","dispatch","useDispatch","useState","loginEmailError","setLoginEmailError","loginPasswordError","setLoginPasswordError","useSelector","state","loginEmail","loginPassword","loginErrorMessage","loginToken","useEffect","loginInputFieldChange","Form","noValidate","Group","controlId","Control","placeholder","value","onChange","event","target","isInvalid","Feedback","onClick","to","SignUp","signUpEmailError","setSignUpEmailError","signUpPasswordError","setSignUpPasswordError","signUpEmail","signUpPassword","signUpApiMessage","signUpInputFieldChange","slice","onSignUpUser","CustomModal","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Title","modalHeader","Body","modalMessage","Footer","onSelectedYes","showLogoutModal","setShowLogoutModal","isLogout","setLogout","AuthenticateLoginHOC","WrappedComponent","Fragment","pageNumber","setPageNumber","pageId","userListData","userListApiFailedMessage","tableResponsiveSize","window","innerWidth","Table","striped","bordered","hover","length","map","list","index","key","id","email","first_name","last_name","userID","location","hash","userProfileDetails","profileDetailsFailedMessage","showDeleteModal","setShowDeleteModal","avatar","userId","src","alt","App","exact","path","component","UserList","UserDetails","Boolean","hostname","match","signUpToken","userDataReducer","initialState","action","signUpErrorMessage","getUserState","axiosGet","axiosPost","axiosDelete","url","axios","get","getResponse","payload","post","postResponse","delete","deleteResponse","validateUser","userRegistration","getUsers","takeEveryGetUsers","getProfileDetails","takeEveryGetProfileDetails","deleteUser","history","createBrowserHistory","require","take","select","stateData","loginDetails","password","put","status","data","registerDetails","response","goBack","JSON","parse","request","error","takeEvery","sagaMiddleware","createSagaMiddleware","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","saga","sagas","run","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"+pBAgBO,SAASA,EAAmBC,EAAgBC,GACjD,MAAO,CACLC,KCZiC,wBDajCF,iBACAC,c,YEAWE,EAjBO,SAAAC,GACpB,OACwB,IAAtBA,EAAMC,aACJ,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,UAAQ,EAACC,UAAU,QAC3C,kBAACC,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,OACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SANhB,eC4GSC,EAtGD,WACZ,IAAMC,EAAWC,cADC,EAG4BC,oBAAS,GAHrC,mBAGXC,EAHW,KAGMC,EAHN,OAIkCF,oBAAS,GAJ3C,mBAIXG,EAJW,KAISC,EAJT,OAWdC,aAAY,SAAAC,GAAK,OAAIA,KALvBC,EANgB,EAMhBA,WACAC,EAPgB,EAOhBA,cACAC,EARgB,EAQhBA,kBACAC,EATgB,EAShBA,WACAxB,EAVgB,EAUhBA,YAGFyB,qBACE,WACEb,EHmBG,CACLf,KCtBuB,kBEIvB,CAACe,IAGH,IAUMc,EAAwB,SAAC/B,EAAgBC,GAC7CgB,EAASlB,EAAmBC,EAAgBC,KAE9C,OACE,yBAAKQ,UAAU,kBACb,yBAAKA,UAAU,qBACb,4CACCmB,GACC,yBAAKnB,UAAU,qBAAf,IAAqCmB,GAEvC,yBAAKnB,UAAU,eACb,kBAACuB,EAAA,EAAD,CAAMC,YAAU,GACd,kBAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,QAAN,CACE3B,UAAU,YACVP,KAAK,QACLmC,YAAY,YACZC,MAAOZ,EACPa,SAAU,SAAAC,GAAK,OACbT,EAAsB,aAAcS,EAAMC,OAAOH,QACnDI,UAAWtB,GAAkC,KAAfM,IAEhC,kBAACM,EAAA,EAAKI,QAAQO,SAAd,CACElC,UAAU,0BACVP,KAAK,WAFP,2BAQJ,kBAAC8B,EAAA,EAAD,CAAMC,YAAU,GACd,kBAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,qBACpB,kBAACH,EAAA,EAAKI,QAAN,CACE3B,UAAU,YACVP,KAAK,WACLmC,YAAY,WACZC,MAAOX,EACPY,SAAU,SAAAC,GAAK,OACbT,EAAsB,gBAAiBS,EAAMC,OAAOH,QACtDI,UAAWpB,GAAwC,KAAlBK,IAEnC,kBAACK,EAAA,EAAKI,QAAQO,SAAd,CACElC,UAAU,0BACVP,KAAK,WAFP,4BASN,kBAACI,EAAA,EAAD,CACEJ,KAAK,SACLO,UAAU,kBACVmC,QAAS,WA9DXlB,GAAcC,EAChBV,EH/BG,CACLf,KCH+B,wBEkCL,KAAfwB,EACTL,GAAmB,GACQ,KAAlBM,GACTJ,GAAsB,KA2DlB,uBAAGd,UAAU,iCAAb,KALF,WASA,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAMoC,GAAG,WACP,uBAAGpC,UAAU,gCADf,wBAKDoB,GAAc,kBAAC,IAAD,CAAUgB,GAAG,cAC5B,kBAAC,EAAD,CAAexC,YAAaA,OCCrByC,EAlGA,WACb,IAAM7B,EAAWC,cADE,EAE6BC,oBAAS,GAFtC,mBAEZ4B,EAFY,KAEMC,EAFN,OAGmC7B,oBAAS,GAH5C,mBAGZ8B,EAHY,KAGSC,EAHT,OASf1B,aAAY,SAAAC,GAAK,OAAIA,KAJvB0B,EALiB,EAKjBA,YACAC,EANiB,EAMjBA,eACAC,EAPiB,EAOjBA,iBACAhD,EARiB,EAQjBA,YAGFyB,qBACE,WACEb,EJsBG,CACLf,KCtBuB,kBGCvB,CAACe,IAGH,IAYMqC,EAAyB,SAACtD,EAAgBC,GAC9CgB,EAASlB,EAAmBC,EAAgBC,KAE9C,OACE,yBAAKQ,UAAU,kBACb,yBAAKA,UAAU,qBACb,6CAEC4C,GACC,yBAAK5C,UAAU,qBAAqB4C,EAAiBE,MAAM,IAG7D,yBAAK9C,UAAU,eACb,kBAACuB,EAAA,EAAD,CAAMC,YAAU,GACd,kBAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,EAAA,EAAKI,QAAN,CACE3B,UAAU,YACVP,KAAK,QACLmC,YAAY,YACZC,MAAOa,EACPZ,SAAU,SAAAC,GAAK,OACbc,EAAuB,cAAed,EAAMC,OAAOH,QACrDI,UAAWK,GAAoC,KAAhBI,IAEjC,kBAACnB,EAAA,EAAKI,QAAQO,SAAd,CACElC,UAAU,0BACVP,KAAK,WAFP,2BAQJ,kBAAC8B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,MAAN,CAAYC,UAAU,qBACpB,kBAACH,EAAA,EAAKI,QAAN,CACE3B,UAAU,YACVP,KAAK,WACLmC,YAAY,WACZC,MAAOc,EACPb,SAAU,SAAAC,GAAK,OACbc,EAAuB,iBAAkBd,EAAMC,OAAOH,QACxDI,UAAWO,GAA0C,KAAnBG,IAEpC,kBAACpB,EAAA,EAAKI,QAAQO,SAAd,CACElC,UAAU,0BACVP,KAAK,WAFP,4BASN,kBAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,SAAS0C,QAAS,WA/DjDO,GAAeC,GACjBJ,GAAoB,GACpBE,GAAuB,GACvBjC,EJzBC,SAAsBkC,EAAaC,GACxC,MAAO,CACLlD,KCD0B,iBDE1BiD,cACAC,kBIqBWI,CAAaL,EAAaC,KACV,KAAhBD,EACTH,GAAoB,GACQ,KAAnBI,GACTF,GAAuB,KAyDnB,uBAAGzC,UAAU,gCADf,WAIA,6BACE,kBAAC,EAAD,CAAeJ,YAAaA,MAGhC,yBAAKI,UAAU,eACb,uBAAGA,UAAU,4CACb,kBAAC,IAAD,CAAMoC,GAAG,KAAT,oB,kBC3EOY,EAzBK,SAAArD,GAClB,OACE,kBAACsD,EAAA,EAAD,CACEC,KAAMvD,EAAMuD,KACZC,OAAQxD,EAAMwD,OACd/C,KAAK,KACLgD,kBAAgB,gCAChBC,UAAQ,GAER,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMO,MAAP,KAAc7D,EAAM8D,cAEtB,kBAACR,EAAA,EAAMS,KAAP,KAAa/D,EAAMgE,cACnB,kBAACV,EAAA,EAAMW,OAAP,KACE,kBAAC/D,EAAA,EAAD,CAAQC,QAAQ,YAAYqC,QAAS,kBAAMxC,EAAMkE,kBAAjD,OAGA,kBAAChE,EAAA,EAAD,CAAQC,QAAQ,UAAUqC,QAAS,kBAAMxC,EAAMwD,WAA/C,SCyBOG,EAvCA,SAAA3D,GACb,IAAMa,EAAWC,cADK,EAEwBC,oBAAS,GAFjC,mBAEfoD,EAFe,KAEEC,EAFF,OAGQrD,oBAAS,GAHjB,mBAGfsD,EAHe,KAGLC,EAHK,KASdhD,EAAeF,aAAY,SAAAC,GAAK,OAAIA,KAApCC,WACR,OACE,yBAAKjB,UAAU,eACb,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,sBAAhB,MACA,0BAAMA,UAAU,eAAhB,WAAuCiB,GACvC,0BAAMjB,UAAU,sBACd,yBACEmC,QAAS,kBAAM4B,GAAmB,IAClC/D,UAAU,iBAFZ,YASH8D,GACC,kBAAC,EAAD,CACEZ,KAAMY,EACND,cAAe,kBAvBrBrD,ENmCK,CACLf,KCtBuB,qBKbvBwE,GAAU,IAuBJd,OAAQ,kBAAMY,GAAmB,IACjCJ,aAAa,oCACbF,YAAY,wBAGfO,GAAY,kBAAC,IAAD,CAAU5B,GAAG,QCxBjB8B,EAZc,SAAAC,GAS3B,OARY,SAAAxE,GAAU,IACZyB,EAAeL,aAAY,SAAAC,GAAK,OAAIA,KAApCI,WACR,OACE,kBAAC,IAAMgD,SAAP,KACkB,KAAfhD,EAAoB,kBAAC,IAAD,CAAUgB,GAAG,MAAS,kBAAC+B,EAAD,SC0FpCD,KA3FE,WACf,IAAM1D,EAAWC,cADI,EAEeC,mBAAS,GAFxB,mBAEd2D,EAFc,KAEFC,EAFE,KAIrBjD,qBACE,WACEb,ERWG,CACLf,KCZ0B,iBDa1B8E,OQbwBF,MAExB,CAAC7D,EAAU6D,IARQ,MAW8BtD,aACjD,SAAAC,GAAK,OAAIA,KADHwD,EAXa,EAWbA,aAAcC,EAXD,EAWCA,yBA0ClBC,EAAsB,KAI1B,OAHIC,OAAOC,WAAa,MACtBF,EAAsB,MAGtB,yBAAK1E,UAAU,kBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,+CAEF,6BAnCA,kBAAC6E,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAChF,UAAU,OAAOI,KAAMsE,GACnD,+BACE,wBAAI1E,UAAU,sBACZ,qCACA,0CACA,2CAGJ,+BACGwE,EAAaS,OAAS,GACrBT,EAAaU,KAAI,SAACC,EAAMC,GACtB,OACE,wBAAIC,IAAKD,GACP,wBAAIpF,UAAU,eACZ,kBAAC,IAAD,CAAMoC,GAAE,uBAAkB+C,EAAKG,KAAOH,EAAKI,QAE7C,4BAAKJ,EAAKK,YACV,4BAAKL,EAAKM,kBAmBtB,yBAAKzF,UAAU,qBACb,kBAACH,EAAA,EAAD,CACEO,KAAK,KACLN,QAAQ,eACRC,SAAyB,IAAfsE,EACVlC,QAAS,WArDI,IAAfkC,GACFC,EAAcD,EAAa,KAsDvB,uBAAGrE,UAAU,oDAEf,0BAAMA,UAAU,QAAQqE,GACxB,kBAACxE,EAAA,EAAD,CACEO,KAAK,KACLN,QAAQ,eACRC,SAAyB,IAAfsE,EACVlC,QAAS,WAzDI,IAAfkC,GACFC,EAAcD,EAAa,KA0DvB,uBAAGrE,UAAU,sDAIhByE,GACC,yBAAKzE,UAAU,qBAAqByE,OCL7BP,KA3EK,SAAAvE,GAClB,IAAI+F,EAASf,OAAOgB,SAASC,KAAK9C,MAAM,IAClCtC,EAAWC,cAFU,EAOvBM,aAAY,SAAAC,GAAK,OAAIA,KAHvB6E,EAJyB,EAIzBA,mBACAC,EALyB,EAKzBA,4BACAlG,EANyB,EAMzBA,YANyB,EAQmBc,oBAAS,GAR5B,mBAQpBqF,EARoB,KAQHC,EARG,KAWnBC,EAAyCJ,EAAzCI,OAAQV,EAAiCM,EAAjCN,MAAOC,EAA0BK,EAA1BL,WAAYC,EAAcI,EAAdJ,UAEnCpE,qBACE,WACEb,ETIG,CACLf,KCdoC,2BDepCyG,OSNiCR,MAEjC,CAAClF,EAAUkF,IAOb,OACE,kBAAC,IAAMtB,SAAP,KACE,yBAAKpE,UAAU,kBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,wBACZ8F,GACC,yBAAK9F,UAAU,qBACZ8F,GAIL,yBACE9F,UAAU,uBACVmG,IAAKF,EACLG,IAAI,uBAEN,yBAAKpG,UAAU,qBACb,6BAAMuF,GACN,uCAASC,EAAT,YAAuBC,KAEzB,yBAAKzF,UAAU,oBACb,kBAACH,EAAA,EAAD,CACEC,QAAQ,iBACRqC,QAAS,kBAAM6D,GAAmB,KAFpC,WAOF,6BACE,uBAAGhG,UAAU,4CACb,kBAAC,IAAD,CAAMoC,GAAG,aAAT,qBAEF,kBAAC,EAAD,CAAexC,YAAaA,MAI/BmG,GACC,kBAAC,EAAD,CACE7C,KAAM6C,EACNlC,cA5CU,WAClBmC,GAAmB,GACnBxF,ETIK,CACLf,KClB0B,iBDmB1ByG,OSNsBR,KA2CdvC,OAAQ,kBAAM6C,GAAmB,IACjCrC,aAAa,yCACbF,YAAY,6BCzDT4C,MAff,WACE,OACE,yBAAKrG,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,IAAIC,UAAWjG,IACjC,kBAAC,IAAD,CAAO+F,OAAK,EAACC,KAAK,SAASC,UAAWjG,IACtC,kBAAC,IAAD,CAAO+F,OAAK,EAACC,KAAK,UAAUC,UAAWnE,IACvC,kBAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,YAAYC,UAAWC,IACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,uBAAuBC,UAAWE,IACpD,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,uBAAuBC,UAAWE,OCLxCC,QACW,cAA7BhC,OAAOgB,SAASiB,UAEe,UAA7BjC,OAAOgB,SAASiB,UAEhBjC,OAAOgB,SAASiB,SAASC,MACvB,2D,4BClBS,GACb5F,WAAY,GACZC,cAAe,GACfC,kBAAmB,GACnBC,WAAY,GAEZsB,YAAa,GACbC,eAAgB,GAChBmE,YAAa,GACblE,iBAAkB,GAElB4B,aAAc,GACdC,yBAA0B,GAE1BoB,mBAAoB,GACpBC,4BAA6B,GAE7BlG,aAAa,GCiEAmH,EA/ES,WAAmC,IAAD,EAAjC/F,EAAiC,uDAAzBgG,EAAcC,EAAW,uCACxD,OAAQA,EAAOxH,MACb,IZH6B,oBYI3B,OAAO,2BACFuB,GADL,IAEEI,WAAY6F,EAAO7F,aAEvB,IZP4B,mBYQ1B,OAAO,2BACFJ,GADL,IAEEG,kBAAmB8F,EAAO9F,oBAE9B,IZTiC,wBYU/B,OAAO,2BACFH,GADL,uBAEGiG,EAAO1H,eAAiB0H,EAAOzH,YAFlC,kCAGqB,IAHrB,iCAIoB,IAJpB,IAMF,IZZ8B,qBYa5B,OAAO,2BACFwB,GADL,IAEE4B,iBAAkBqE,EAAOC,mBACzBxE,YAAa,GACbC,eAAgB,KAGpB,IZnB+B,sBYoB7B,OAAO,2BACF3B,GADL,IAEE8F,YAAaG,EAAOH,YACpBpE,YAAa,GACbC,eAAgB,KAGpB,IZvBgC,uBYwB9B,OAAO,2BACF3B,GADL,IAEEwD,aAAcyC,EAAOzC,aACrBC,yBAA0B,KAE9B,IZ5B+B,sBY6B7B,OAAO,2BACFzD,GADL,IAEEyD,yBAA0BwC,EAAOxC,2BAGrC,IZ9BuC,8BY+BrC,OAAO,2BACFzD,GADL,IAEE6E,mBAAoBoB,EAAOpB,mBAC3BC,4BAA6B,KAEjC,IZnCsC,6BYoCpC,OAAO,2BACF9E,GADL,IAEE8E,4BAA6BmB,EAAOnB,8BAGxC,IZrCuB,cYsCrB,OAAO,eACFkB,GAGP,IZtC4B,mBY2C5B,IZ1C2B,kBY2CzB,OAAO,2BACFhG,GADL,IAEEpB,YAAaqH,EAAOrH,cAExB,QACE,OAAO,eAAKoB,K,iDC9ELmG,EAAe,SAAAnG,GAAK,OAAIA,G,4BCEpBoG,G,WAKAC,G,WAKAC,GAVV,SAAUF,EAASG,GAAnB,uEACa,OADb,SACmBC,IAAMC,IAAIF,GAD7B,cACDG,EADC,yBAEEA,GAFF,uCAKA,SAAUL,EAAUE,EAAKI,GAAzB,uEACc,OADd,SACoBH,IAAMI,KAAKL,EAAKI,GADpC,cACDE,EADC,yBAEEA,GAFF,uCAKA,SAAUP,EAAYC,GAAtB,uEACgB,OADhB,SACsBC,IAAMM,OAAOP,GADnC,cACDQ,EADC,yBAEEA,GAFF,uC,eCFUC,I,WA8CAC,I,WAgDAC,I,WAqBAC,I,WAKAC,I,WAoCAC,I,WAIAC,IApKXC,IAAUC,EADWC,EAAQ,IAAWD,wBAKvC,SAAUR,KAAV,2EAEH,OAFG,SAEGU,YfXyB,uBeS5B,OAGa,OAHb,SAGmBC,YAAOxB,GAH1B,OAWD,OAREyB,EAHD,OAIGC,EAAe,CACnBtD,MAAOqD,EAAU3H,WACjB6H,SAAUF,EAAU1H,eAElBwG,OARD,qBAWKqB,YAAI,CACRtJ,KfOwB,mBeNxBG,aAAa,IAbd,QAgBa,OAhBb,UAgBmByH,EAAU,8BAE5BwB,GAlBD,aAgBDnB,EAhBC,SAqByC,MAAvBA,EAAYsB,OArB9B,iBAsBC,OAtBD,UAsBOD,YAAI,CACRtJ,Kf/BuB,oBegCvB2B,WAAYsG,EAAYuB,OAxB3B,QA2BD,OA3BC,UA2BKF,YAAI,CACRtJ,KfRuB,kBeSvBG,aAAa,IA7Bd,gCAgCD,OAhCC,oCAgCKmJ,YAAI,CACRtJ,KfbuB,kBecvBG,aAAa,IAlCd,QAoCD,OApCC,UAoCKmJ,YAAI,CACRtJ,Kf5CwB,mBe6CxB0B,kBAAmB,6CAtCpB,6EA8CA,SAAU8G,KAAV,2EAEH,OAFG,SAEGS,YfjDoB,kBe+CvB,OAGa,OAHb,SAGmBC,YAAOxB,GAH1B,OAYD,OATEyB,EAHD,OAKGM,EAAkB,CACtB3D,MAAOqD,EAAUlG,YACjBoG,SAAUF,EAAUjG,gBAGlBwG,OAVD,qBAYKJ,YAAI,CACRtJ,KfxCwB,mBeyCxBG,aAAa,IAdd,QAiBU,OAjBV,UAiBgByH,EAAU,iCAEzB6B,GAnBD,aAiBDC,EAjBC,SAsBmC,MAApBA,EAASH,OAtBxB,iBAuBC,OAvBD,UAuBOD,YAAI,CACRtJ,KfrEyB,sBesEzBqH,YAAaqC,EAASF,OAzBzB,QA2BC,OA3BD,UA2BOF,YAAI,CACRtJ,KftDqB,kBeuDrBG,aAAa,IA7BhB,QA+BC2I,GAAQa,SA/BT,gCAkCD,OAlCC,oCAkCKL,YAAI,CACRtJ,Kf7DuB,kBe8DvBG,aAAa,IApCd,QAsCD,OAtCC,UAsCKmJ,YAAI,CACRtJ,KfrF0B,qBesF1ByH,mBAAoB,MAAOmC,KAAKC,MAAM,KAAIC,QAAQJ,UAAUK,QAxC7D,6EAgDA,SAAUtB,GAASjB,GAAnB,2EACDA,EADC,iBAIU,OAJV,kBAIgBG,EAAS,qCAAD,OACcH,EAAO1C,SAL7C,OAQD,OAJA4E,EAJC,gBAQKJ,YAAI,CACRtJ,KflG4B,uBemG5B+E,aAAc2E,EAASF,KAAKA,OAV7B,8BAaD,OAbC,mCAaKF,YAAI,CACRtJ,KftG2B,sBeuG3BgF,yBAA0B,gCAf3B,qDAqBA,SAAU0D,KAAV,iEACL,OADK,SACCsB,YfhHsB,iBegHUvB,IADjC,uCAKA,SAAUE,GAAkBnB,GAA5B,2EACDA,EADC,iBAID,OAJC,kBAIK8B,YAAI,CACRtJ,Kf1GwB,mBe2GxBG,aAAa,IANd,OASU,OATV,SASgBwH,EAAS,gCAAD,OACSH,EAAOf,SAVxC,YASDiD,EATC,SAamC,MAApBA,EAASH,OAbxB,iBAcC,OAdD,UAcOD,YAAI,CACRtJ,Kf7HiC,8Be8HjCoG,mBAAoBsD,EAASF,KAAKA,OAhBrC,QAkBC,OAlBD,UAkBOF,YAAI,CACRtJ,KfvHqB,kBewHrBG,aAAa,IApBhB,gCAwBD,OAxBC,oCAwBKmJ,YAAI,CACRtJ,Kf7HuB,kBe8HvBG,aAAa,IA1Bd,QA4BD,OA5BC,UA4BKmJ,YAAI,CACRtJ,Kf1IkC,6Be2IlCqG,4BAA6B,gCA9B9B,sDAoCA,SAAUuC,KAAV,iEACL,OADK,SACCoB,YfpJgC,2BeoJUrB,IAD3C,uCAIA,SAAUE,KAAV,yEAEgB,OAFhB,SAEsBI,YftJC,kBeoJvB,OAKD,OALC,SAEKxC,EAFL,EAEKA,YAFL,oBAKK6C,YAAI,CACRtJ,KfnJwB,mBeoJxBG,aAAa,IAPd,OAUU,OAVV,UAUgB0H,EAAY,gCAAD,OAAiCpB,IAV5D,WAYuB,MAZvB,OAYY8C,OAZZ,iBAaC,OAbD,UAaOD,YAAI,CACRtJ,Kf1JqB,kBe2JrBG,aAAa,IAfhB,QAiBC2I,GAAQa,SAjBT,gCAoBD,OApBC,oCAoBKL,YAAI,CACRtJ,KfjKuB,kBekKvBG,aAAa,IAtBd,QAwBD,OAxBC,UAwBKmJ,YAAI,CACRtJ,Kf9KkC,6Be+KlCqG,4BAA6B,8BA1B9B,6EClKP,IAAM4D,GAAiBC,cCEvB,IAAMC,GDAS,SAAwB5C,GACrC,IAAM6C,EACJlF,OAAOmF,sCAAwCC,IAE7CH,EAAQI,YACVjD,EACAC,EACA6C,EACEI,YAAgBP,GAAgBQ,SAIpC,IAAK,IAAIC,KAAQC,EAEfV,GAAeW,IAAID,EAAMD,IAE3B,OAAOP,EChBKU,GAEdC,IAASC,OACP,kBAAC,IAAD,CAAeZ,MAAOA,IACpB,kBAAC,IAAMa,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,SAINC,SAASC,eAAe,SP+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1B,GACL2B,QAAQ3B,MAAMA,EAAM4B,c","file":"static/js/main.ebd788c1.chunk.js","sourcesContent":["import * as types from \"./actionTypes\";\r\n\r\nexport function validateUserLogin() {\r\n  return {\r\n    type: types.VALIDATE_USER_LOGIN\r\n  };\r\n}\r\n\r\nexport function onSignUpUser(signUpEmail, signUpPassword) {\r\n  return {\r\n    type: types.ON_SIGNUP_USER,\r\n    signUpEmail,\r\n    signUpPassword\r\n  };\r\n}\r\n\r\nexport function onInputFieldChange(inputFieldName, inputValue) {\r\n  return {\r\n    type: types.ON_INPUT_FIELD_CHANGE,\r\n    inputFieldName,\r\n    inputValue\r\n  };\r\n}\r\n\r\nexport function getUserLists(pageId) {\r\n  return {\r\n    type: types.GET_USER_LISTS,\r\n    pageId\r\n  };\r\n}\r\n\r\nexport function getUserProfileDetails(userId) {\r\n  return {\r\n    type: types.GET_USER_PROFILE_DETAILS,\r\n    userId\r\n  };\r\n}\r\n\r\nexport function onDeleteUser(userId) {\r\n  return {\r\n    type: types.ON_DELETE_USER,\r\n    userId\r\n  };\r\n}\r\n\r\nexport function userLogout() {\r\n  return {\r\n    type: types.USER_LOGOUT\r\n  };\r\n}\r\n","//Login\r\nexport const VALIDATE_USER_LOGIN = \"VALIDATE_USER_LOGIN\";\r\nexport const LOGIN_API_SUCCESS = \"LOGIN_API_SUCCESS\";\r\nexport const LOGIN_API_FAILED = \"LOGIN_API_FAILED\";\r\n\r\n//InputField\r\nexport const ON_INPUT_FIELD_CHANGE = \"ON_INPUT_FIELD_CHANGE\";\r\n\r\n//SignUP\r\nexport const ON_SIGNUP_USER = \"ON_SIGNUP_USER\";\r\nexport const SIGN_UP_API_FAILED = \"SIGN_UP_API_FAILED\";\r\nexport const SIGN_UP_API_SUCCESS = \"SIGN_UP_API_SUCCESS\";\r\n\r\n//UserList\r\nexport const GET_USER_LISTS = \"GET_USER_LISTS\";\r\nexport const USERLIST_API_SUCCESS = \"USERLIST_API_SUCCESS\";\r\nexport const USERLIST_API_FAILED = \"USERLIST_API_FAILED\";\r\n\r\n//UserProfileDetails\r\nexport const GET_USER_PROFILE_DETAILS = \"GET_USER_PROFILE_DETAILS\";\r\nexport const PROFILE_DETAILS_API_SUCCESS = \"PROFILE_DETAILS_API_SUCCESS\";\r\nexport const PROFILE_DETAILS_API_FAILED = \"PROFILE_DETAILS_API_FAILED\";\r\nexport const ON_DELETE_USER = \"ON_DELETE_USER\";\r\n\r\n//Logout\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\n//Spinner\r\n\r\nexport const START_API_LOADER = \"START_API_LOADER\";\r\nexport const STOP_API_LOADER = \"STOP_API_LOADER\";\r\n","import React from \"react\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\nconst CustomSpinner = props => {\r\n  return (\r\n    props.loadSpinner === true && (\r\n      <Button variant=\"primary\" disabled className=\"mt-3\">\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        />\r\n        Loading...\r\n      </Button>\r\n    )\r\n  );\r\n};\r\n\r\nexport default CustomSpinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  validateUserLogin,\r\n  onInputFieldChange,\r\n  userLogout\r\n} from \"../redux/actions/userActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [loginEmailError, setLoginEmailError] = useState(false);\r\n  const [loginPasswordError, setLoginPasswordError] = useState(false);\r\n  const {\r\n    loginEmail,\r\n    loginPassword,\r\n    loginErrorMessage,\r\n    loginToken,\r\n    loadSpinner\r\n  } = useSelector(state => state);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(userLogout());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onLoginClick = () => {\r\n    if (loginEmail && loginPassword) {\r\n      dispatch(validateUserLogin());\r\n    } else if (loginEmail === \"\") {\r\n      setLoginEmailError(true);\r\n    } else if (loginPassword === \"\") {\r\n      setLoginPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const loginInputFieldChange = (inputFieldName, inputValue) => {\r\n    dispatch(onInputFieldChange(inputFieldName, inputValue));\r\n  };\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"container-wrapper\">\r\n        <h2> React Login</h2>\r\n        {loginErrorMessage && (\r\n          <div className=\"api-error-message\"> {loginErrorMessage}</div>\r\n        )}\r\n        <div className=\"login-forms\">\r\n          <Form noValidate>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control\r\n                className=\"formInput\"\r\n                type=\"email\"\r\n                placeholder=\"USER NAME\"\r\n                value={loginEmail}\r\n                onChange={event =>\r\n                  loginInputFieldChange(\"loginEmail\", event.target.value)}\r\n                isInvalid={loginEmailError && loginEmail === \"\"}\r\n              />\r\n              <Form.Control.Feedback\r\n                className=\"form-validation-invalid\"\r\n                type=\"invalid\"\r\n              >\r\n                Please enter username\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form noValidate>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Control\r\n                className=\"formInput\"\r\n                type=\"password\"\r\n                placeholder=\"PASSWORD\"\r\n                value={loginPassword}\r\n                onChange={event =>\r\n                  loginInputFieldChange(\"loginPassword\", event.target.value)}\r\n                isInvalid={loginPasswordError && loginPassword === \"\"}\r\n              />\r\n              <Form.Control.Feedback\r\n                className=\"form-validation-invalid\"\r\n                type=\"invalid\"\r\n              >\r\n                Please enter password\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"btn btn-success\"\r\n          onClick={() => onLoginClick()}\r\n        >\r\n          <i className=\"fas fa-sign-in-alt font-icons\"> </i>\r\n          Sign in\r\n        </Button>\r\n\r\n        <div className=\"login-form-footer\">\r\n          <Link to=\"/signup\">\r\n            <i className=\"fas fa-user-plus font-icons\" />Signup New Account?\r\n          </Link>\r\n        </div>\r\n\r\n        {loginToken && <Redirect to=\"/userlist\" />}\r\n        <CustomSpinner loadSpinner={loadSpinner} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  onSignUpUser,\r\n  onInputFieldChange,\r\n  userLogout\r\n} from \"../redux/actions/userActions\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const [signUpEmailError, setSignUpEmailError] = useState(false);\r\n  const [signUpPasswordError, setSignUpPasswordError] = useState(false);\r\n  const {\r\n    signUpEmail,\r\n    signUpPassword,\r\n    signUpApiMessage,\r\n    loadSpinner\r\n  } = useSelector(state => state);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(userLogout());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onSignUpClick = () => {\r\n    if (signUpEmail && signUpPassword) {\r\n      setSignUpEmailError(false);\r\n      setSignUpPasswordError(false);\r\n      dispatch(onSignUpUser(signUpEmail, signUpPassword));\r\n    } else if (signUpEmail === \"\") {\r\n      setSignUpEmailError(true);\r\n    } else if (signUpPassword === \"\") {\r\n      setSignUpPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const signUpInputFieldChange = (inputFieldName, inputValue) => {\r\n    dispatch(onInputFieldChange(inputFieldName, inputValue));\r\n  };\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"container-wrapper\">\r\n        <h2> React Signup</h2>\r\n\r\n        {signUpApiMessage && (\r\n          <div className=\"api-error-message\">{signUpApiMessage.slice(6)}</div>\r\n        )}\r\n\r\n        <div className=\"login-forms\">\r\n          <Form noValidate>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control\r\n                className=\"formInput\"\r\n                type=\"email\"\r\n                placeholder=\"USER NAME\"\r\n                value={signUpEmail}\r\n                onChange={event =>\r\n                  signUpInputFieldChange(\"signUpEmail\", event.target.value)}\r\n                isInvalid={signUpEmailError && signUpEmail === \"\"}\r\n              />\r\n              <Form.Control.Feedback\r\n                className=\"form-validation-invalid\"\r\n                type=\"invalid\"\r\n              >\r\n                Please enter username\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Control\r\n                className=\"formInput\"\r\n                type=\"password\"\r\n                placeholder=\"PASSWORD\"\r\n                value={signUpPassword}\r\n                onChange={event =>\r\n                  signUpInputFieldChange(\"signUpPassword\", event.target.value)}\r\n                isInvalid={signUpPasswordError && signUpPassword === \"\"}\r\n              />\r\n              <Form.Control.Feedback\r\n                className=\"form-validation-invalid\"\r\n                type=\"invalid\"\r\n              >\r\n                Please enter password\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={() => onSignUpClick()}>\r\n          <i className=\"fas fa-user-plus font-icons\" />\r\n          SIGN UP\r\n        </Button>\r\n        <div>\r\n          <CustomSpinner loadSpinner={loadSpinner} />\r\n        </div>\r\n      </div>\r\n      <div className=\"float-style\">\r\n        <i className=\"far fa-arrow-alt-circle-left font-icons\" />\r\n        <Link to=\"/\">Back to Login</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst CustomModal = props => {\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.modalHeader}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.modalMessage}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={() => props.onSelectedYes()}>\r\n          Yes\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={() => props.onHide()}>\r\n          No\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomModal from \"./CustomModal\";\r\nimport { userLogout } from \"../redux/actions/userActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const dispatch = useDispatch();\r\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n  const [isLogout, setLogout] = useState(false);\r\n  const onLogout = () => {\r\n    dispatch(userLogout());\r\n    setLogout(true);\r\n  };\r\n\r\n  const { loginEmail } = useSelector(state => state);\r\n  return (\r\n    <div className=\"user-header\">\r\n      <div className=\"header-wrapper\">\r\n        <span className=\"circle float-style\">EH</span>\r\n        <span className=\"header-text\">Welcome {loginEmail}</span>\r\n        <span className=\"header-logout-text\">\r\n          <div\r\n            onClick={() => setShowLogoutModal(true)}\r\n            className=\"header-logout\"\r\n          >\r\n            Logout\r\n          </div>\r\n        </span>\r\n      </div>\r\n\r\n      {showLogoutModal && (\r\n        <CustomModal\r\n          show={showLogoutModal}\r\n          onSelectedYes={() => onLogout()}\r\n          onHide={() => setShowLogoutModal(false)}\r\n          modalMessage=\"Are you Sure, you want to Logout!\"\r\n          modalHeader=\"Logout Confirmation\"\r\n        />\r\n      )}\r\n      {isLogout && <Redirect to=\"/\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst AuthenticateLoginHOC = WrappedComponent => {\r\n  const HOC = props => {\r\n    const { loginToken } = useSelector(state => state);\r\n    return (\r\n      <React.Fragment>\r\n        {loginToken === \"\" ? <Redirect to=\"/\" /> : <WrappedComponent />}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  return HOC;\r\n};\r\n\r\nexport default AuthenticateLoginHOC;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserLists } from \"../redux/actions/userActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport AuthenticateLoginHOC from \"./AuthenticateLoginHOC\";\r\n\r\nconst UserList = () => {\r\n  const dispatch = useDispatch();\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getUserLists(pageNumber));\r\n    },\r\n    [dispatch, pageNumber]\r\n  );\r\n\r\n  const { userListData, userListApiFailedMessage } = useSelector(\r\n    state => state\r\n  );\r\n\r\n  const onLeftArrowClick = () => {\r\n    if (pageNumber === 2) {\r\n      setPageNumber(pageNumber - 1);\r\n    }\r\n  };\r\n  const onRightArrowClick = () => {\r\n    if (pageNumber === 1) {\r\n      setPageNumber(pageNumber + 1);\r\n    }\r\n  };\r\n\r\n  const rendertableData = () => {\r\n    return (\r\n      <Table striped bordered hover className=\"mt-3\" size={tableResponsiveSize}>\r\n        <thead>\r\n          <tr className=\"table-main-heading\">\r\n            <th>Email</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {userListData.length > 0 &&\r\n            userListData.map((list, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td className=\"table-email\">\r\n                    <Link to={`/userdetails/${list.id}`}>{list.email}</Link>\r\n                  </td>\r\n                  <td>{list.first_name}</td>\r\n                  <td>{list.last_name}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n  let tableResponsiveSize = \"md\";\r\n  if (window.innerWidth < 1000) {\r\n    tableResponsiveSize = \"sm\";\r\n  }\r\n  return (\r\n    <div className=\"user-container\">\r\n      <Header />\r\n      <div className=\"mt-3\">\r\n        <h4> LIST OF USERS</h4>\r\n      </div>\r\n      <div>{rendertableData()}</div>\r\n      <div className=\"pagination-arrows\">\r\n        <Button\r\n          size=\"sm\"\r\n          variant=\"outline-info\"\r\n          disabled={pageNumber === 1}\r\n          onClick={() => onLeftArrowClick()}\r\n        >\r\n          <i className=\"fa fa-arrow-circle-left pagination-arrow-icons\" />\r\n        </Button>\r\n        <span className=\"px-2\">{pageNumber}</span>\r\n        <Button\r\n          size=\"sm\"\r\n          variant=\"outline-info\"\r\n          disabled={pageNumber === 2}\r\n          onClick={() => onRightArrowClick()}\r\n        >\r\n          <i className=\"fa fa-arrow-circle-right pagination-arrow-icons\" />\r\n        </Button>\r\n      </div>\r\n\r\n      {userListApiFailedMessage && (\r\n        <div className=\"api-error-message\">{userListApiFailedMessage}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthenticateLoginHOC(UserList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUserProfileDetails,\r\n  onDeleteUser\r\n} from \"../redux/actions/userActions\";\r\nimport Header from \"./Header\";\r\nimport CustomModal from \"./CustomModal\";\r\nimport AuthenticateLoginHOC from \"./AuthenticateLoginHOC\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserDetails = props => {\r\n  let userID = window.location.hash.slice(14);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    userProfileDetails,\r\n    profileDetailsFailedMessage,\r\n    loadSpinner\r\n  } = useSelector(state => state);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  // console.log(\"userProfileDetails\", props.match.params.userid);\r\n\r\n  const { avatar, email, first_name, last_name } = userProfileDetails;\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getUserProfileDetails(userID));\r\n    },\r\n    [dispatch, userID]\r\n  );\r\n\r\n  const onDeleteYes = () => {\r\n    setShowDeleteModal(false);\r\n    dispatch(onDeleteUser(userID));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"user-container\">\r\n        <Header />\r\n        <div className=\"user-profile-container\">\r\n          <div className=\"user-profile-wrapper\">\r\n            {profileDetailsFailedMessage && (\r\n              <div className=\"api-error-message\">\r\n                {profileDetailsFailedMessage}\r\n              </div>\r\n            )}\r\n\r\n            <img\r\n              className=\"user-profile-picture\"\r\n              src={avatar}\r\n              alt=\"userProfilePicture\"\r\n            />\r\n            <div className=\"user-details-text\">\r\n              <div>{email}</div>\r\n              <div>{`${first_name} ${last_name}`}</div>\r\n            </div>\r\n            <div className=\"user-delete-link\">\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                onClick={() => setShowDeleteModal(true)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <i className=\"far fa-arrow-alt-circle-left font-icons\" />\r\n              <Link to=\"/userlist\">Back to UserList</Link>\r\n            </div>\r\n            <CustomSpinner loadSpinner={loadSpinner} />\r\n          </div>\r\n        </div>\r\n\r\n        {showDeleteModal && (\r\n          <CustomModal\r\n            show={showDeleteModal}\r\n            onSelectedYes={onDeleteYes}\r\n            onHide={() => setShowDeleteModal(false)}\r\n            modalMessage=\"Are you Sure, you want to Delete user!\"\r\n            modalHeader=\"Delete Confirmation\"\r\n          />\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AuthenticateLoginHOC(UserDetails);\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./styles/mainstyles.scss\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport UserList from \"./components/UserList\";\nimport UserDetails from \"./components/UserDetails\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/userlist\" component={UserList} />\n        <Route exact path=\"/userdetails/:userid\" component={UserDetails} />\n        <Route exact path=\"/userdetails/:userid\" component={UserDetails} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\r\n  loginEmail: \"\",\r\n  loginPassword: \"\",\r\n  loginErrorMessage: \"\",\r\n  loginToken: \"\",\r\n\r\n  signUpEmail: \"\",\r\n  signUpPassword: \"\",\r\n  signUpToken: \"\",\r\n  signUpApiMessage: \"\",\r\n\r\n  userListData: [],\r\n  userListApiFailedMessage: \"\",\r\n\r\n  userProfileDetails: {},\r\n  profileDetailsFailedMessage: \"\",\r\n\r\n  loadSpinner: false\r\n};\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nconst userDataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.LOGIN_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loginToken: action.loginToken\r\n      };\r\n    case types.LOGIN_API_FAILED:\r\n      return {\r\n        ...state,\r\n        loginErrorMessage: action.loginErrorMessage\r\n      };\r\n    case types.ON_INPUT_FIELD_CHANGE:\r\n      return {\r\n        ...state,\r\n        [action.inputFieldName]: action.inputValue,\r\n        loginErrorMessage: \"\",\r\n        signUpApiMessage: \"\"\r\n      };\r\n    case types.SIGN_UP_API_FAILED:\r\n      return {\r\n        ...state,\r\n        signUpApiMessage: action.signUpErrorMessage,\r\n        signUpEmail: \"\",\r\n        signUpPassword: \"\"\r\n      };\r\n\r\n    case types.SIGN_UP_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signUpToken: action.signUpToken,\r\n        signUpEmail: \"\",\r\n        signUpPassword: \"\"\r\n      };\r\n\r\n    case types.USERLIST_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userListData: action.userListData,\r\n        userListApiFailedMessage: \"\"\r\n      };\r\n    case types.USERLIST_API_FAILED:\r\n      return {\r\n        ...state,\r\n        userListApiFailedMessage: action.userListApiFailedMessage\r\n      };\r\n\r\n    case types.PROFILE_DETAILS_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userProfileDetails: action.userProfileDetails,\r\n        profileDetailsFailedMessage: \"\"\r\n      };\r\n    case types.PROFILE_DETAILS_API_FAILED:\r\n      return {\r\n        ...state,\r\n        profileDetailsFailedMessage: action.profileDetailsFailedMessage\r\n      };\r\n\r\n    case types.USER_LOGOUT:\r\n      return {\r\n        ...initialState\r\n      };\r\n\r\n    case types.START_API_LOADER:\r\n      return {\r\n        ...state,\r\n        loadSpinner: action.loadSpinner\r\n      };\r\n    case types.STOP_API_LOADER:\r\n      return {\r\n        ...state,\r\n        loadSpinner: action.loadSpinner\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default userDataReducer;\r\n","export const getUserState = state => state;\r\n","import axios from \"axios\";\r\n\r\nexport function* axiosGet(url) {\r\n  let getResponse = yield axios.get(url);\r\n  return getResponse;\r\n}\r\n\r\nexport function* axiosPost(url, payload) {\r\n  let postResponse = yield axios.post(url, payload);\r\n  return postResponse;\r\n}\r\n\r\nexport function* axiosDelete(url) {\r\n  let deleteResponse = yield axios.delete(url);\r\n  return deleteResponse;\r\n}\r\n","import * as types from \"./actions/actionTypes\";\r\nimport { take, select, put, takeEvery } from \"redux-saga/effects\";\r\nimport { getUserState } from \"./actions/helper\";\r\nimport { axiosPost, axiosGet, axiosDelete } from \"./service\";\r\n\r\nvar createBrowserHistory = require(\"history\").createBrowserHistory;\r\nconst history = createBrowserHistory();\r\n\r\n/** Login */\r\n\r\nexport function* validateUser() {\r\n  while (true) {\r\n    yield take(types.VALIDATE_USER_LOGIN);\r\n    let stateData = yield select(getUserState);\r\n    const loginDetails = {\r\n      email: stateData.loginEmail,\r\n      password: stateData.loginPassword\r\n    };\r\n    let getResponse;\r\n\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n\r\n      getResponse = yield axiosPost(\r\n        `https://reqres.in/api/login`,\r\n        loginDetails\r\n      );\r\n\r\n      if (getResponse && getResponse.status === 200) {\r\n        yield put({\r\n          type: types.LOGIN_API_SUCCESS,\r\n          loginToken: getResponse.data\r\n        });\r\n      }\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.LOGIN_API_FAILED,\r\n        loginErrorMessage: \"User not found, Please create an account\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/** SignUp */\r\n\r\nexport function* userRegistration() {\r\n  while (true) {\r\n    yield take(types.ON_SIGNUP_USER);\r\n    let stateData = yield select(getUserState);\r\n\r\n    const registerDetails = {\r\n      email: stateData.signUpEmail,\r\n      password: stateData.signUpPassword\r\n    };\r\n\r\n    let response;\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n\r\n      response = yield axiosPost(\r\n        `https://reqres.in/api/register`,\r\n        registerDetails\r\n      );\r\n\r\n      if (response && response.status === 200) {\r\n        yield put({\r\n          type: types.SIGN_UP_API_SUCCESS,\r\n          signUpToken: response.data\r\n        });\r\n        yield put({\r\n          type: types.STOP_API_LOADER,\r\n          loadSpinner: false\r\n        });\r\n        history.goBack();\r\n      }\r\n    } catch (err) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.SIGN_UP_API_FAILED,\r\n        signUpErrorMessage: err && JSON.parse(err.request.response).error\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/** User-list */\r\n\r\nexport function* getUsers(action) {\r\n  if (action) {\r\n    let response;\r\n    try {\r\n      response = yield axiosGet(\r\n        `https://reqres.in/api/users?page= ${action.pageId}`\r\n      );\r\n\r\n      yield put({\r\n        type: types.USERLIST_API_SUCCESS,\r\n        userListData: response.data.data\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: types.USERLIST_API_FAILED,\r\n        userListApiFailedMessage: \"We are unable to fetch data\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function* takeEveryGetUsers() {\r\n  yield takeEvery(types.GET_USER_LISTS, getUsers);\r\n}\r\n\r\n/** User-profile */\r\nexport function* getProfileDetails(action) {\r\n  if (action) {\r\n    let response;\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n\r\n      response = yield axiosGet(\r\n        `https://reqres.in/api/users/ ${action.userId}`\r\n      );\r\n\r\n      if (response && response.status === 200) {\r\n        yield put({\r\n          type: types.PROFILE_DETAILS_API_SUCCESS,\r\n          userProfileDetails: response.data.data\r\n        });\r\n        yield put({\r\n          type: types.STOP_API_LOADER,\r\n          loadSpinner: false\r\n        });\r\n      }\r\n    } catch (err) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.PROFILE_DETAILS_API_FAILED,\r\n        profileDetailsFailedMessage: \"We are unable to fetch data\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function* takeEveryGetProfileDetails() {\r\n  yield takeEvery(types.GET_USER_PROFILE_DETAILS, getProfileDetails);\r\n}\r\n\r\nexport function* deleteUser() {\r\n  while (true) {\r\n    const { userId } = yield take(types.ON_DELETE_USER);\r\n    let response;\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n\r\n      response = yield axiosDelete(`https://reqres.in/api/users/ ${userId}`);\r\n\r\n      if (response.status === 204) {\r\n        yield put({\r\n          type: types.STOP_API_LOADER,\r\n          loadSpinner: false\r\n        });\r\n        history.goBack();\r\n      }\r\n    } catch (e) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.PROFILE_DETAILS_API_FAILED,\r\n        profileDetailsFailedMessage: \"We are unable delete user\"\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport userDataReducer from \"./reducers/userDataReducer\";\r\n\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n// eslint-disable-next-line\r\nimport * as sagas from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n  let store = createStore(\r\n    userDataReducer,\r\n    initialState,\r\n    composeEnhancers(\r\n      applyMiddleware(sagaMiddleware, reduxImmutableStateInvariant())\r\n    )\r\n  );\r\n\r\n  for (let saga in sagas) {\r\n    // eslint-disable-next-line\r\n    sagaMiddleware.run(sagas[saga]);\r\n  }\r\n  return store;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </React.StrictMode>\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}