{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/userActions.js","components/CustomSpinner.js","components/Login.js","components/SignUp.js","components/CustomModal.js","components/Header.js","components/AuthenticateLogin.js","components/UserList.js","components/UserDetails.js","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/userDataReducer.js","redux/sagas.js","redux/configureStore.js","index.js","assets/left-arrow.svg","assets/right-arrow.svg"],"names":["getUserState","state","userData","onInputFieldChange","inputFieldName","inputValue","type","CustomSpinner","props","loadSpinner","Button","variant","disabled","style","marginTop","Spinner","as","animation","size","role","aria-hidden","Login","dispatch","useDispatch","useState","loginEmailError","setLoginEmailError","loginPasswordError","setLoginPasswordError","useSelector","loginEmail","loginPassword","loginErrorMessage","loginToken","useEffect","loginInputFieldChange","className","Form","noValidate","Group","controlId","Control","placeholder","value","onChange","event","target","isInvalid","Feedback","onClick","to","SignUp","signUpEmailError","setSignUpEmailError","signUpPasswordError","setSignUpPasswordError","signUpEmail","signUpPassword","signUpApiMessage","signUpInputFieldChange","slice","onSignUpUser","CustomModal","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Title","modalHeader","Body","modalMessage","Footer","onSelectedYes","showLogoutModal","setShowLogoutModal","isLogout","setLogout","paddingTop","float","color","fontSize","paddingLeft","paddingRight","fontWeight","cursor","AuthenticateLogin","WrappedComponent","Fragment","pageNumber","setPageNumber","pageId","userListData","userListApiFailedMessage","tableResponsiveSize","window","innerWidth","Table","striped","bordered","hover","length","map","list","index","key","id","email","first_name","last_name","src","LeftArrow","width","marginRight","alt","RightArrow","userID","location","hash","userProfileDetails","profileDetailsFailedMessage","showDeleteModal","setShowDeleteModal","userId","avatar","App","exact","path","component","UserList","UserDetails","Boolean","hostname","match","signUpToken","rootReducer","combineReducers","initialState","action","signUpErrorMessage","validateUser","userRegistration","getUsers","takeEveryGetUsers","getProfileDetails","takeEveryGetProfileDetails","deleteUser","history","createBrowserHistory","require","take","select","types","stateData","loginDetails","password","response","put","axios","post","status","data","console","log","registerDetails","goBack","JSON","parse","request","error","get","takeEvery","delete","sagaMiddleware","createSagaMiddleware","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","saga","sagas","run","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.b940a5d0.chunk.js","sourcesContent":["//Login\r\nexport const VALIDATE_USER_LOGIN = \"VALIDATE_USER_LOGIN\";\r\nexport const LOGIN_API_SUCCESS = \"LOGIN_API_SUCCESS\";\r\nexport const LOGIN_API_FAILED = \"LOGIN_API_FAILED\";\r\n\r\n//InputField\r\nexport const ON_INPUT_FIELD_CHANGE = \"ON_INPUT_FIELD_CHANGE\";\r\nexport const getUserState = state => state.userData;\r\n\r\n//SignUP\r\nexport const ON_SIGNUP_USER = \"ON_SIGNUP_USER\";\r\nexport const SIGN_UP_API_FAILED = \"SIGN_UP_API_FAILED\";\r\nexport const SIGN_UP_API_SUCCESS = \"SIGN_UP_API_SUCCESS\";\r\n\r\n//UserList\r\nexport const GET_USER_LISTS = \"GET_USER_LISTS\";\r\nexport const USERLIST_API_SUCCESS = \"USERLIST_API_SUCCESS\";\r\nexport const USERLIST_API_FAILED = \"USERLIST_API_FAILED\";\r\n\r\n//UserProfileDetails\r\nexport const GET_USER_PROFILE_DETAILS = \"GET_USER_PROFILE_DETAILS\";\r\nexport const PROFILE_DETAILS_API_SUCCESS = \"PROFILE_DETAILS_API_SUCCESS\";\r\nexport const PROFILE_DETAILS_API_FAILED = \"PROFILE_DETAILS_API_FAILED\";\r\nexport const ON_DELETE_USER = \"ON_DELETE_USER\";\r\n\r\n//Logout\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\n//Spinner\r\n\r\nexport const START_API_LOADER = \"START_API_LOADER\";\r\nexport const STOP_API_LOADER = \"STOP_API_LOADER\";\r\n","import * as types from \"./actionTypes\";\r\n\r\nexport function validateUserLogin() {\r\n  return {\r\n    type: types.VALIDATE_USER_LOGIN\r\n  };\r\n}\r\n\r\nexport function onSignUpUser(signUpEmail, signUpPassword) {\r\n  return {\r\n    type: types.ON_SIGNUP_USER,\r\n    signUpEmail,\r\n    signUpPassword\r\n  };\r\n}\r\n\r\nexport function onInputFieldChange(inputFieldName, inputValue) {\r\n  return {\r\n    type: types.ON_INPUT_FIELD_CHANGE,\r\n    inputFieldName,\r\n    inputValue\r\n  };\r\n}\r\n\r\nexport function getUserLists(pageId) {\r\n  return {\r\n    type: types.GET_USER_LISTS,\r\n    pageId\r\n  };\r\n}\r\n\r\nexport function getUserProfileDetails(userId) {\r\n  return {\r\n    type: types.GET_USER_PROFILE_DETAILS,\r\n    userId\r\n  };\r\n}\r\n\r\nexport function onDeleteUser(userId) {\r\n  return {\r\n    type: types.ON_DELETE_USER,\r\n    userId\r\n  };\r\n}\r\n\r\nexport function userLogout() {\r\n  return {\r\n    type: types.USER_LOGOUT\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/app.scss\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\nconst CustomSpinner = props => {\r\n  return (\r\n    props.loadSpinner === true && (\r\n      <Button variant=\"primary\" disabled style={{ marginTop: \"20px\" }}>\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        />\r\n        Loading...\r\n      </Button>\r\n    )\r\n  );\r\n};\r\n\r\nexport default CustomSpinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/login.scss\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  validateUserLogin,\r\n  onInputFieldChange,\r\n  userLogout\r\n} from \"../redux/actions/userActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [loginEmailError, setLoginEmailError] = useState(false);\r\n  const [loginPasswordError, setLoginPasswordError] = useState(false);\r\n\r\n  const {\r\n    loginEmail,\r\n    loginPassword,\r\n    loginErrorMessage,\r\n    loginToken,\r\n    loadSpinner\r\n  } = useSelector(state => state.userData);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(userLogout());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onLoginClick = () => {\r\n    if (loginEmail && loginPassword) {\r\n      dispatch(validateUserLogin());\r\n    } else if (loginEmail === \"\") {\r\n      setLoginEmailError(true);\r\n    } else if (loginPassword === \"\") {\r\n      setLoginPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const loginInputFieldChange = (inputFieldName, inputValue) => {\r\n    dispatch(onInputFieldChange(inputFieldName, inputValue));\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"container-wrapper\">\r\n        <h2> React Login</h2>\r\n        {loginErrorMessage && (\r\n          <div className=\"api-error-message\"> {loginErrorMessage}</div>\r\n        )}\r\n        <div className=\"login-forms\">\r\n          <Form noValidate>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control\r\n                className=\"formInput\"\r\n                type=\"email\"\r\n                placeholder=\"USER NAME\"\r\n                value={loginEmail}\r\n                onChange={event =>\r\n                  loginInputFieldChange(\"loginEmail\", event.target.value)}\r\n                isInvalid={loginEmailError && loginEmail === \"\"}\r\n              />\r\n              <Form.Control.Feedback\r\n                className=\"form-validation-invalid\"\r\n                type=\"invalid\"\r\n              >\r\n                Please enter username\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form noValidate>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Control\r\n                className=\"formInput\"\r\n                type=\"password\"\r\n                placeholder=\"PASSWORD\"\r\n                value={loginPassword}\r\n                onChange={event =>\r\n                  loginInputFieldChange(\"loginPassword\", event.target.value)}\r\n                isInvalid={loginPasswordError && loginPassword === \"\"}\r\n              />\r\n              <Form.Control.Feedback\r\n                className=\"form-validation-invalid\"\r\n                type=\"invalid\"\r\n              >\r\n                Please enter password\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"btn btn-success\"\r\n          onClick={() => onLoginClick()}\r\n        >\r\n          <i className=\"fas fa-sign-in-alt font-icons\"> </i>\r\n          Sign in\r\n        </Button>\r\n\r\n        <div className=\"form-footer\">\r\n          <Link to=\"/signup\">\r\n            <i className=\"fas fa-user-plus font-icons\" />Signup New Account?\r\n          </Link>\r\n        </div>\r\n\r\n        {loginToken && <Redirect to=\"/userlist\" />}\r\n        <CustomSpinner loadSpinner={loadSpinner} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/app.scss\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  onSignUpUser,\r\n  onInputFieldChange,\r\n  userLogout\r\n} from \"../redux/actions/userActions\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const [signUpEmailError, setSignUpEmailError] = useState(false);\r\n  const [signUpPasswordError, setSignUpPasswordError] = useState(false);\r\n  const {\r\n    signUpEmail,\r\n    signUpPassword,\r\n    signUpApiMessage,\r\n    loadSpinner\r\n  } = useSelector(state => state.userData);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(userLogout());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onSignUpClick = () => {\r\n    if (signUpEmail && signUpPassword) {\r\n      setSignUpEmailError(false);\r\n      setSignUpPasswordError(false);\r\n      dispatch(onSignUpUser(signUpEmail, signUpPassword));\r\n    } else if (signUpEmail === \"\") {\r\n      setSignUpEmailError(true);\r\n    } else if (signUpPassword === \"\") {\r\n      setSignUpPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const signUpInputFieldChange = (inputFieldName, inputValue) => {\r\n    dispatch(onInputFieldChange(inputFieldName, inputValue));\r\n  };\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"container-wrapper\">\r\n        <h2> React Signup</h2>\r\n\r\n        {signUpApiMessage && (\r\n          <div className=\"api-error-message\">{signUpApiMessage.slice(6)}</div>\r\n        )}\r\n\r\n        <div className=\"login-forms\">\r\n          <Form noValidate>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Control\r\n                className=\"formInput\"\r\n                type=\"email\"\r\n                placeholder=\"USER NAME\"\r\n                value={signUpEmail}\r\n                onChange={event =>\r\n                  signUpInputFieldChange(\"signUpEmail\", event.target.value)}\r\n                isInvalid={signUpEmailError && signUpEmail === \"\"}\r\n              />\r\n              <Form.Control.Feedback\r\n                className=\"form-validation-invalid\"\r\n                type=\"invalid\"\r\n              >\r\n                Please enter username\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Control\r\n                className=\"formInput\"\r\n                type=\"password\"\r\n                placeholder=\"PASSWORD\"\r\n                value={signUpPassword}\r\n                onChange={event =>\r\n                  signUpInputFieldChange(\"signUpPassword\", event.target.value)}\r\n                isInvalid={signUpPasswordError && signUpPassword === \"\"}\r\n              />\r\n              <Form.Control.Feedback\r\n                className=\"form-validation-invalid\"\r\n                type=\"invalid\"\r\n              >\r\n                Please enter password\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={() => onSignUpClick()}>\r\n          <i className=\"fas fa-user-plus font-icons\" />\r\n          SIGN UP\r\n        </Button>\r\n        <div>\r\n          <CustomSpinner loadSpinner={loadSpinner} />\r\n        </div>\r\n      </div>\r\n      <div className=\"float-style\">\r\n        <i className=\"far fa-arrow-alt-circle-left font-icons\" />\r\n        <Link to=\"/\">Back to Login</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport \"../styles/app.scss\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst CustomModal = props => {\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.modalHeader}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.modalMessage}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={() => props.onSelectedYes()}>\r\n          Yes\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={() => props.onHide()}>\r\n          No\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/app.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomModal from \"./CustomModal\";\r\nimport { userLogout } from \"../redux/actions/userActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const dispatch = useDispatch();\r\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n  const [isLogout, setLogout] = useState(false);\r\n  const onLogout = () => {\r\n    dispatch(userLogout());\r\n    setLogout(true);\r\n  };\r\n\r\n  const { loginEmail } = useSelector(state => state.userData);\r\n  return (\r\n    <div className=\"user-header\">\r\n      <div style={{ paddingTop: \"20px\" }}>\r\n        <span style={{ float: \"left\" }} className=\"circle\">\r\n          SG\r\n        </span>\r\n        <span\r\n          style={{\r\n            color: \"white\",\r\n            float: \"left\",\r\n            paddingTop: \"2px\",\r\n            fontSize: \"1.2rem\",\r\n            paddingLeft: \"22px\"\r\n          }}\r\n        >\r\n          Welcome {loginEmail}\r\n        </span>\r\n\r\n        <span\r\n          style={{\r\n            float: \"right\",\r\n            paddingRight: \"20px\",\r\n            fontWeight: \"Bold\",\r\n            color: \"white\"\r\n          }}\r\n        >\r\n          <div\r\n            onClick={() => setShowLogoutModal(true)}\r\n            className=\"header-logout\"\r\n            style={{ float: \"right\", cursor: \"pointer\", fontWeight: \"Bold\" }}\r\n          >\r\n            Logout\r\n          </div>\r\n        </span>\r\n      </div>\r\n\r\n      {showLogoutModal && (\r\n        <CustomModal\r\n          show={showLogoutModal}\r\n          onSelectedYes={() => onLogout()}\r\n          onHide={() => setShowLogoutModal(false)}\r\n          modalMessage=\"Are you Sure, you want to Logout!\"\r\n          modalHeader=\"Logout Confirmation\"\r\n        />\r\n      )}\r\n      {isLogout && <Redirect to=\"/\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../styles/app.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst AuthenticateLogin = WrappedComponent => {\r\n  const HOC = props => {\r\n    const { loginToken } = useSelector(state => state.userData);\r\n    return (\r\n      <React.Fragment>\r\n        {loginToken === \"\" ? <Redirect to=\"/\" /> : <WrappedComponent />}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  return HOC;\r\n};\r\n\r\nexport default AuthenticateLogin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/app.scss\";\r\nimport { Table } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserLists } from \"../redux/actions/userActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport LeftArrow from \"../assets/left-arrow.svg\";\r\nimport RightArrow from \"../assets/right-arrow.svg\";\r\nimport AuthenticateLogin from \"./AuthenticateLogin\";\r\n\r\nconst UserList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getUserLists(pageNumber));\r\n    },\r\n    [dispatch, pageNumber]\r\n  );\r\n\r\n  const { userListData, userListApiFailedMessage } = useSelector(\r\n    state => state.userData\r\n  );\r\n\r\n  const onLeftArrowClick = () => {\r\n    if (pageNumber === 2) {\r\n      setPageNumber(pageNumber - 1);\r\n    }\r\n  };\r\n  const onRightArrowClick = () => {\r\n    if (pageNumber === 1) {\r\n      setPageNumber(pageNumber + 1);\r\n    }\r\n  };\r\n\r\n  let tableResponsiveSize = \"md\";\r\n  if (window.innerWidth < 1000) {\r\n    tableResponsiveSize = \"sm\";\r\n  }\r\n  return (\r\n    <div className=\"user-container\">\r\n      <Header />\r\n      <div\r\n        style={{\r\n          marginTop: \"12px\"\r\n        }}\r\n      >\r\n        <h4> LIST OF USERS</h4>\r\n      </div>\r\n      <div>\r\n        <Table\r\n          striped\r\n          bordered\r\n          hover\r\n          style={{ marginTop: \"20px\" }}\r\n          size={tableResponsiveSize}\r\n        >\r\n          <thead>\r\n            <tr className=\"table-main-heading\">\r\n              <th>Email</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {userListData.length > 0 &&\r\n              userListData.map((list, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td className=\"table-email\">\r\n                      <Link to={`/userdetails/${list.id}`}>{list.email}</Link>\r\n                    </td>\r\n                    <td>{list.first_name}</td>\r\n                    <td>{list.last_name}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <div className=\"list-arrows\" style={{ float: \"right\" }}>\r\n        <span>\r\n          <img\r\n            src={LeftArrow}\r\n            style={{ width: \"40px\", marginRight: \"20px\", cursor: \"pointer\" }}\r\n            alt=\"LeftArrow\"\r\n            onClick={() => onLeftArrowClick()}\r\n          />\r\n        </span>\r\n        <span>\r\n          <img\r\n            src={RightArrow}\r\n            style={{ width: \"40px\", cursor: \"pointer\" }}\r\n            alt=\"RightArrow\"\r\n            onClick={() => onRightArrowClick()}\r\n          />\r\n        </span>\r\n      </div>\r\n\r\n      {userListApiFailedMessage && (\r\n        <div className=\"api-error-message\">{userListApiFailedMessage}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthenticateLogin(UserList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/app.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUserProfileDetails,\r\n  onDeleteUser\r\n} from \"../redux/actions/userActions\";\r\nimport Header from \"./Header\";\r\nimport CustomModal from \"./CustomModal\";\r\nimport AuthenticateLogin from \"./AuthenticateLogin\";\r\nimport CustomSpinner from \"./CustomSpinner\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst UserDetails = props => {\r\n  let userID = window.location.hash.slice(14);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    userProfileDetails,\r\n    profileDetailsFailedMessage,\r\n    loadSpinner\r\n  } = useSelector(state => state.userData);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  // console.log(\"userProfileDetails\", props.match.params.userid);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getUserProfileDetails(userID));\r\n    },\r\n    [dispatch, userID]\r\n  );\r\n\r\n  const onDeleteYes = () => {\r\n    setShowDeleteModal(false);\r\n    dispatch(onDeleteUser(userID));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"user-container\">\r\n        <Header />\r\n        <div className=\"user-profile-container\">\r\n          <div className=\"user-profile-wrapper\">\r\n            {profileDetailsFailedMessage && (\r\n              <div className=\"api-error-message\">\r\n                {profileDetailsFailedMessage}\r\n              </div>\r\n            )}\r\n\r\n            <img\r\n              className=\"user-profile-picture\"\r\n              src={userProfileDetails && userProfileDetails.avatar}\r\n              alt=\"userProfilePicture\"\r\n            />\r\n            <div className=\"user-details-text\">\r\n              <div>{userProfileDetails && userProfileDetails.email}</div>\r\n              <div>\r\n                {userProfileDetails && userProfileDetails.first_name}{\" \"}\r\n                {userProfileDetails && userProfileDetails.last_name}\r\n              </div>\r\n            </div>\r\n            <div className=\"user-delete-link\">\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                onClick={() => setShowDeleteModal(true)}\r\n              >\r\n                {\" \"}\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {showDeleteModal && (\r\n          <CustomModal\r\n            show={showDeleteModal}\r\n            onSelectedYes={onDeleteYes}\r\n            onHide={() => setShowDeleteModal(false)}\r\n            modalMessage=\"Are you Sure, you want to Delete user!\"\r\n            modalHeader=\"Delete Confirmation\"\r\n          />\r\n        )}\r\n        <CustomSpinner loadSpinner={loadSpinner} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AuthenticateLogin(UserDetails);\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./styles/app.scss\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport UserList from \"./components/UserList\";\nimport UserDetails from \"./components/UserDetails\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/userlist\" component={UserList} />\n        <Route exact path=\"/userdetails/:userid\" component={UserDetails} />\n        <Route exact path=\"/userdetails/:userid\" component={UserDetails} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\r\n  loginEmail: \"\",\r\n  loginPassword: \"\",\r\n  loginErrorMessage: \"\",\r\n  loginToken: \"\",\r\n\r\n  signUpEmail: \"\",\r\n  signUpPassword: \"\",\r\n  signUpToken: \"\",\r\n  signUpApiMessage: \"\",\r\n\r\n  userListData: [],\r\n  userListApiFailedMessage: \"\",\r\n\r\n  userProfileDetails: {},\r\n  profileDetailsFailedMessage: \"\",\r\n\r\n  loadSpinner: false\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport userData from \"./userDataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  userData\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function userDataReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.LOGIN_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loginToken: action.loginToken\r\n      };\r\n    case types.LOGIN_API_FAILED:\r\n      return {\r\n        ...state,\r\n        loginErrorMessage: action.loginErrorMessage\r\n      };\r\n    case types.ON_INPUT_FIELD_CHANGE:\r\n      return {\r\n        ...state,\r\n        [action.inputFieldName]: action.inputValue,\r\n        loginErrorMessage: \"\",\r\n        signUpApiMessage: \"\"\r\n      };\r\n    case types.SIGN_UP_API_FAILED:\r\n      return {\r\n        ...state,\r\n        signUpApiMessage: action.signUpErrorMessage,\r\n        signUpEmail: \"\",\r\n        signUpPassword: \"\"\r\n      };\r\n\r\n    case types.SIGN_UP_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signUpToken: action.signUpToken,\r\n        signUpEmail: \"\",\r\n        signUpPassword: \"\"\r\n      };\r\n\r\n    case types.USERLIST_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userListData: action.userListData,\r\n        userListApiFailedMessage: \"\"\r\n      };\r\n    case types.USERLIST_API_FAILED:\r\n      return {\r\n        ...state,\r\n        userListApiFailedMessage: action.userListApiFailedMessage\r\n      };\r\n\r\n    case types.PROFILE_DETAILS_API_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userProfileDetails: action.userProfileDetails,\r\n        profileDetailsFailedMessage: \"\"\r\n      };\r\n    case types.PROFILE_DETAILS_API_FAILED:\r\n      return {\r\n        ...state,\r\n        profileDetailsFailedMessage: action.profileDetailsFailedMessage\r\n      };\r\n\r\n    case types.USER_LOGOUT:\r\n      return {\r\n        ...state,\r\n        loginEmail: \"\",\r\n        loginPassword: \"\",\r\n        loginErrorMessage: \"\",\r\n        loginToken: \"\",\r\n        userListData: [],\r\n        userProfileDetails: {},\r\n        signUpEmail: \"\",\r\n        signUpPassword: \"\",\r\n        signUpToken: \"\",\r\n        signUpApiMessage: \"\"\r\n      };\r\n\r\n    case types.START_API_LOADER:\r\n      return {\r\n        ...state,\r\n        loadSpinner: action.loadSpinner\r\n      };\r\n    case types.STOP_API_LOADER:\r\n      return {\r\n        ...state,\r\n        loadSpinner: action.loadSpinner\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"./actions/actionTypes\";\r\nimport { take, select, put, takeEvery } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nvar createBrowserHistory = require(\"history\").createBrowserHistory;\r\nconst history = createBrowserHistory();\r\n\r\n/** Login */\r\n\r\nexport function* validateUser() {\r\n  while (true) {\r\n    yield take(types.VALIDATE_USER_LOGIN);\r\n    let stateData = yield select(types.getUserState);\r\n\r\n    const loginDetails = {\r\n      email: stateData.loginEmail,\r\n      password: stateData.loginPassword\r\n    };\r\n    let response;\r\n\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n\r\n      response = yield axios.post(`https://reqres.in/api/login`, loginDetails);\r\n\r\n      if (response && response.status === 200) {\r\n        yield put({\r\n          type: types.LOGIN_API_SUCCESS,\r\n          loginToken: response.data\r\n        });\r\n      }\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n    } catch (e) {\r\n      console.log(\"ee\", e);\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.LOGIN_API_FAILED,\r\n        loginErrorMessage: \"User not found, Please create an account\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/** SignUp */\r\n\r\nexport function* userRegistration() {\r\n  while (true) {\r\n    yield take(types.ON_SIGNUP_USER);\r\n    let stateData = yield select(types.getUserState);\r\n\r\n    const registerDetails = {\r\n      email: stateData.signUpEmail,\r\n      password: stateData.signUpPassword\r\n    };\r\n\r\n    let response;\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n      response = yield axios.post(\r\n        `https://reqres.in/api/register`,\r\n        registerDetails\r\n      );\r\n\r\n      if (response && response.status === 200) {\r\n        yield put({\r\n          type: types.SIGN_UP_API_SUCCESS,\r\n          signUpToken: response.data\r\n        });\r\n        yield put({\r\n          type: types.STOP_API_LOADER,\r\n          loadSpinner: false\r\n        });\r\n        history.goBack();\r\n      }\r\n    } catch (err) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.SIGN_UP_API_FAILED,\r\n        signUpErrorMessage: err && JSON.parse(err.request.response).error\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/** User-list */\r\n\r\n// export function* getUsers() {\r\n//   const { pageId } = yield take(types.GET_USER_LISTS);\r\n//   console.log(\"pageId\", pageId);\r\n\r\n//   let response;\r\n//   try {\r\n//     response = yield axios.get(`https://reqres.in/api/users?page= ${pageId}`);\r\n\r\n//     yield put({\r\n//       type: types.USERLIST_API_SUCCESS,\r\n//       userListData: response.data.data\r\n//     });\r\n//   } catch (e) {\r\n//     yield put({\r\n//       type: types.USERLIST_API_FAILED,\r\n//       userListApiFailedMessage: \"We are unable to fetch data\"\r\n//     });\r\n//   }\r\n// }\r\nexport function* getUsers(action) {\r\n  if (action) {\r\n    let response;\r\n    try {\r\n      response = yield axios.get(\r\n        `https://reqres.in/api/users?page= ${action.pageId}`\r\n      );\r\n\r\n      yield put({\r\n        type: types.USERLIST_API_SUCCESS,\r\n        userListData: response.data.data\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: types.USERLIST_API_FAILED,\r\n        userListApiFailedMessage: \"We are unable to fetch data\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function* takeEveryGetUsers() {\r\n  yield takeEvery(types.GET_USER_LISTS, getUsers);\r\n}\r\n\r\n/** User-profile */\r\nexport function* getProfileDetails(action) {\r\n  if (action) {\r\n    let response;\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n\r\n      response = yield axios.get(\r\n        `https://reqres.in/api/users/ ${action.userId}`\r\n      );\r\n      if (response && response.status === 200) {\r\n        yield put({\r\n          type: types.PROFILE_DETAILS_API_SUCCESS,\r\n          userProfileDetails: response.data.data\r\n        });\r\n        yield put({\r\n          type: types.STOP_API_LOADER,\r\n          loadSpinner: false\r\n        });\r\n      }\r\n    } catch (err) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.PROFILE_DETAILS_API_FAILED,\r\n        profileDetailsFailedMessage: \"We are unable to fetch data\"\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function* takeEveryGetProfileDetails() {\r\n  yield takeEvery(types.GET_USER_PROFILE_DETAILS, getProfileDetails);\r\n}\r\n\r\nexport function* deleteUser() {\r\n  while (true) {\r\n    const { userId } = yield take(types.ON_DELETE_USER);\r\n    let response;\r\n    try {\r\n      yield put({\r\n        type: types.START_API_LOADER,\r\n        loadSpinner: true\r\n      });\r\n\r\n      response = yield axios.delete(`https://reqres.in/api/users/ ${userId}`);\r\n\r\n      if (response.status === 204) {\r\n        yield put({\r\n          type: types.STOP_API_LOADER,\r\n          loadSpinner: false\r\n        });\r\n        history.goBack();\r\n      }\r\n    } catch (e) {\r\n      yield put({\r\n        type: types.STOP_API_LOADER,\r\n        loadSpinner: false\r\n      });\r\n      yield put({\r\n        type: types.PROFILE_DETAILS_API_FAILED,\r\n        profileDetailsFailedMessage: \"We are unable delete user\"\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n// eslint-disable-next-line\r\nimport * as sagas from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n  let store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(\r\n      applyMiddleware(sagaMiddleware, reduxImmutableStateInvariant())\r\n    )\r\n  );\r\n\r\n  for (let saga in sagas) {\r\n    // eslint-disable-next-line\r\n    sagaMiddleware.run(sagas[saga]);\r\n  }\r\n  return store;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </React.StrictMode>\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/left-arrow.46b3d88f.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.1dc1d55f.svg\";"],"sourceRoot":""}